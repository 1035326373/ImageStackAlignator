//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-27506705
// Cuda compilation tools, release 10.2, V10.2.89
// Based on LLVM 3.4svn
//

.version 6.5
.target sm_30
.address_size 64

	// .globl	squaredSum
.const .align 4 .b8 FA11[36] = {0, 0, 128, 62, 0, 0, 0, 191, 0, 0, 128, 62, 0, 0, 0, 63, 0, 0, 128, 191, 0, 0, 0, 63, 0, 0, 128, 62, 0, 0, 0, 191, 0, 0, 128, 62};
.const .align 4 .b8 FA22[36] = {0, 0, 128, 62, 0, 0, 0, 63, 0, 0, 128, 62, 0, 0, 0, 191, 0, 0, 128, 191, 0, 0, 0, 191, 0, 0, 128, 62, 0, 0, 0, 63, 0, 0, 128, 62};
.const .align 4 .b8 FA12[36] = {0, 0, 128, 62, 0, 0, 0, 0, 0, 0, 128, 190, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 128, 190, 0, 0, 0, 0, 0, 0, 128, 62};
.const .align 4 .b8 Fb1[36] = {0, 0, 0, 190, 0, 0, 0, 0, 0, 0, 0, 62, 0, 0, 128, 190, 0, 0, 0, 0, 0, 0, 128, 62, 0, 0, 0, 190, 0, 0, 0, 0, 0, 0, 0, 62};
.const .align 4 .b8 Fb2[36] = {0, 0, 0, 190, 0, 0, 128, 190, 0, 0, 0, 190, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 62, 0, 0, 128, 62, 0, 0, 0, 62};
.extern .shared .align 4 .b8 shared[];
.const .align 4 .b8 __cudart_i2opi_f[24] = {65, 144, 67, 60, 153, 149, 98, 219, 192, 221, 52, 245, 209, 87, 39, 252, 41, 21, 68, 78, 110, 131, 249, 162};

.visible .entry squaredSum(
	.param .u64 squaredSum_param_0,
	.param .u64 squaredSum_param_1,
	.param .u32 squaredSum_param_2,
	.param .u32 squaredSum_param_3,
	.param .u32 squaredSum_param_4
)
{
	.reg .pred 	%p<9>;
	.reg .f32 	%f<34>;
	.reg .b32 	%r<40>;
	.reg .b64 	%rd<18>;


	ld.param.u64 	%rd6, [squaredSum_param_0];
	ld.param.u64 	%rd5, [squaredSum_param_1];
	ld.param.u32 	%r14, [squaredSum_param_2];
	ld.param.u32 	%r15, [squaredSum_param_3];
	ld.param.u32 	%r16, [squaredSum_param_4];
	cvta.to.global.u64 	%rd1, %rd6;
	mov.u32 	%r17, %ntid.x;
	mov.u32 	%r18, %ctaid.x;
	mov.u32 	%r19, %tid.x;
	mad.lo.s32 	%r1, %r17, %r18, %r19;
	setp.ge.s32	%p1, %r1, %r16;
	@%p1 bra 	BB0_17;

	shl.b32 	%r20, %r14, 1;
	add.s32 	%r2, %r20, %r15;
	mov.f32 	%f32, 0f00000000;
	setp.lt.s32	%p2, %r15, 1;
	@%p2 bra 	BB0_16;

	mad.lo.s32 	%r3, %r1, %r2, %r14;
	mov.f32 	%f14, 0f00000000;
	mov.u32 	%r21, 0;
	mov.u32 	%r35, %r21;
	mov.f32 	%f32, %f14;

BB0_3:
	add.s32 	%r26, %r3, %r35;
	mad.lo.s32 	%r5, %r26, %r2, %r14;
	and.b32  	%r25, %r15, 3;
	setp.eq.s32	%p3, %r25, 0;
	@%p3 bra 	BB0_4;

	setp.eq.s32	%p4, %r25, 1;
	@%p4 bra 	BB0_6;
	bra.uni 	BB0_7;

BB0_6:
	mov.u32 	%r37, %r21;
	bra.uni 	BB0_11;

BB0_4:
	mov.u32 	%r39, %r21;
	mov.f32 	%f29, %f32;
	mov.f32 	%f32, %f14;
	bra.uni 	BB0_12;

BB0_7:
	setp.eq.s32	%p5, %r25, 2;
	@%p5 bra 	BB0_8;
	bra.uni 	BB0_9;

BB0_8:
	mov.u32 	%r36, %r21;
	bra.uni 	BB0_10;

BB0_9:
	mul.wide.s32 	%rd7, %r5, 4;
	add.s64 	%rd8, %rd1, %rd7;
	ld.global.f32 	%f16, [%rd8];
	fma.rn.f32 	%f32, %f16, %f16, %f32;
	mov.u32 	%r36, 1;

BB0_10:
	add.s32 	%r28, %r5, %r36;
	mul.wide.s32 	%rd9, %r28, 4;
	add.s64 	%rd10, %rd1, %rd9;
	ld.global.f32 	%f17, [%rd10];
	fma.rn.f32 	%f32, %f17, %f17, %f32;
	add.s32 	%r37, %r36, 1;

BB0_11:
	add.s32 	%r29, %r5, %r37;
	mul.wide.s32 	%rd11, %r29, 4;
	add.s64 	%rd12, %rd1, %rd11;
	ld.global.f32 	%f18, [%rd12];
	fma.rn.f32 	%f29, %f18, %f18, %f32;
	add.s32 	%r39, %r37, 1;
	mov.f32 	%f32, %f29;

BB0_12:
	setp.lt.u32	%p6, %r15, 4;
	@%p6 bra 	BB0_15;

	add.s32 	%r30, %r5, %r39;
	mul.wide.s32 	%rd13, %r30, 4;
	add.s64 	%rd17, %rd1, %rd13;
	mov.f32 	%f32, %f29;

BB0_14:
	ld.global.f32 	%f19, [%rd17];
	fma.rn.f32 	%f20, %f19, %f19, %f32;
	ld.global.f32 	%f21, [%rd17+4];
	fma.rn.f32 	%f22, %f21, %f21, %f20;
	ld.global.f32 	%f23, [%rd17+8];
	fma.rn.f32 	%f24, %f23, %f23, %f22;
	ld.global.f32 	%f25, [%rd17+12];
	fma.rn.f32 	%f32, %f25, %f25, %f24;
	add.s64 	%rd17, %rd17, 16;
	add.s32 	%r39, %r39, 4;
	setp.lt.s32	%p7, %r39, %r15;
	@%p7 bra 	BB0_14;

BB0_15:
	add.s32 	%r35, %r35, 1;
	setp.lt.s32	%p8, %r35, %r15;
	@%p8 bra 	BB0_3;

BB0_16:
	cvta.to.global.u64 	%rd14, %rd5;
	mul.wide.s32 	%rd15, %r1, 4;
	add.s64 	%rd16, %rd14, %rd15;
	st.global.f32 	[%rd16], %f32;

BB0_17:
	ret;
}

	// .globl	boxFilterWithBorderX
.visible .entry boxFilterWithBorderX(
	.param .u64 boxFilterWithBorderX_param_0,
	.param .u64 boxFilterWithBorderX_param_1,
	.param .u32 boxFilterWithBorderX_param_2,
	.param .u32 boxFilterWithBorderX_param_3,
	.param .u32 boxFilterWithBorderX_param_4
)
{
	.reg .pred 	%p<15>;
	.reg .f32 	%f<31>;
	.reg .b32 	%r<65>;
	.reg .b64 	%rd<9>;


	ld.param.u64 	%rd1, [boxFilterWithBorderX_param_0];
	ld.param.u64 	%rd2, [boxFilterWithBorderX_param_1];
	ld.param.u32 	%r24, [boxFilterWithBorderX_param_2];
	ld.param.u32 	%r23, [boxFilterWithBorderX_param_3];
	ld.param.u32 	%r25, [boxFilterWithBorderX_param_4];
	mov.u32 	%r26, %ntid.x;
	mov.u32 	%r27, %ctaid.x;
	mov.u32 	%r28, %tid.x;
	mad.lo.s32 	%r1, %r26, %r27, %r28;
	mov.u32 	%r29, %ntid.y;
	mov.u32 	%r30, %ctaid.y;
	mov.u32 	%r31, %tid.y;
	mad.lo.s32 	%r2, %r29, %r30, %r31;
	mov.u32 	%r32, %ntid.z;
	mov.u32 	%r33, %ctaid.z;
	mov.u32 	%r3, %tid.z;
	mad.lo.s32 	%r4, %r32, %r33, %r3;
	shl.b32 	%r5, %r24, 1;
	add.s32 	%r6, %r5, %r23;
	setp.ge.s32	%p1, %r2, %r6;
	setp.ge.s32	%p2, %r1, %r6;
	or.pred  	%p3, %p2, %p1;
	setp.ge.s32	%p4, %r4, %r25;
	or.pred  	%p5, %p3, %p4;
	@%p5 bra 	BB1_13;

	cvta.to.global.u64 	%rd3, %rd1;
	mad.lo.s32 	%r34, %r4, %r6, %r2;
	mad.lo.s32 	%r7, %r34, %r6, %r1;
	mul.wide.s32 	%rd4, %r7, 4;
	add.s64 	%rd5, %rd3, %rd4;
	ld.global.f32 	%f10, [%rd5];
	mad.lo.s32 	%r8, %r3, %r6, %r1;
	shl.b32 	%r35, %r8, 2;
	mov.u32 	%r36, shared;
	add.s32 	%r37, %r36, %r35;
	st.shared.f32 	[%r37], %f10;
	bar.sync 	0;
	shr.u32 	%r38, %r23, 31;
	add.s32 	%r39, %r23, %r38;
	shr.s32 	%r9, %r39, 1;
	add.s32 	%r40, %r9, %r5;
	setp.gt.s32	%p6, %r1, %r40;
	setp.lt.s32	%p7, %r1, %r9;
	mov.f32 	%f30, 0f00000000;
	or.pred  	%p8, %p6, %p7;
	@%p8 bra 	BB1_12;

	neg.s32 	%r41, %r23;
	shr.u32 	%r42, %r41, 31;
	sub.s32 	%r43, %r42, %r23;
	shr.s32 	%r62, %r43, 1;
	setp.le.s32	%p9, %r9, %r62;
	@%p9 bra 	BB1_12;

	sub.s32 	%r11, %r9, %r62;
	and.b32  	%r44, %r11, 3;
	mov.f32 	%f30, 0f00000000;
	setp.eq.s32	%p10, %r44, 0;
	@%p10 bra 	BB1_9;

	setp.eq.s32	%p11, %r44, 1;
	@%p11 bra 	BB1_8;

	setp.eq.s32	%p12, %r44, 2;
	@%p12 bra 	BB1_7;

	add.s32 	%r45, %r62, %r8;
	shl.b32 	%r46, %r45, 2;
	add.s32 	%r48, %r36, %r46;
	ld.shared.f32 	%f16, [%r48];
	fma.rn.f32 	%f30, %f16, %f16, 0f00000000;
	add.s32 	%r62, %r62, 1;

BB1_7:
	add.s32 	%r49, %r62, %r8;
	shl.b32 	%r50, %r49, 2;
	add.s32 	%r52, %r36, %r50;
	ld.shared.f32 	%f17, [%r52];
	fma.rn.f32 	%f30, %f17, %f17, %f30;
	add.s32 	%r62, %r62, 1;

BB1_8:
	add.s32 	%r53, %r62, %r8;
	shl.b32 	%r54, %r53, 2;
	add.s32 	%r56, %r36, %r54;
	ld.shared.f32 	%f18, [%r56];
	fma.rn.f32 	%f30, %f18, %f18, %f30;
	add.s32 	%r62, %r62, 1;

BB1_9:
	setp.lt.u32	%p13, %r11, 4;
	@%p13 bra 	BB1_12;

	add.s32 	%r57, %r8, %r62;
	shl.b32 	%r58, %r57, 2;
	add.s32 	%r63, %r36, %r58;

BB1_11:
	ld.shared.f32 	%f19, [%r63];
	fma.rn.f32 	%f20, %f19, %f19, %f30;
	ld.shared.f32 	%f21, [%r63+4];
	fma.rn.f32 	%f22, %f21, %f21, %f20;
	ld.shared.f32 	%f23, [%r63+8];
	fma.rn.f32 	%f24, %f23, %f23, %f22;
	ld.shared.f32 	%f25, [%r63+12];
	fma.rn.f32 	%f30, %f25, %f25, %f24;
	add.s32 	%r63, %r63, 16;
	add.s32 	%r62, %r62, 4;
	setp.lt.s32	%p14, %r62, %r9;
	@%p14 bra 	BB1_11;

BB1_12:
	cvta.to.global.u64 	%rd6, %rd2;
	add.s64 	%rd8, %rd6, %rd4;
	st.global.f32 	[%rd8], %f30;

BB1_13:
	ret;
}

	// .globl	boxFilterWithBorderY
.visible .entry boxFilterWithBorderY(
	.param .u64 boxFilterWithBorderY_param_0,
	.param .u64 boxFilterWithBorderY_param_1,
	.param .u32 boxFilterWithBorderY_param_2,
	.param .u32 boxFilterWithBorderY_param_3,
	.param .u32 boxFilterWithBorderY_param_4
)
{
	.reg .pred 	%p<15>;
	.reg .f32 	%f<31>;
	.reg .b32 	%r<65>;
	.reg .b64 	%rd<9>;


	ld.param.u64 	%rd1, [boxFilterWithBorderY_param_0];
	ld.param.u64 	%rd2, [boxFilterWithBorderY_param_1];
	ld.param.u32 	%r24, [boxFilterWithBorderY_param_2];
	ld.param.u32 	%r23, [boxFilterWithBorderY_param_3];
	ld.param.u32 	%r25, [boxFilterWithBorderY_param_4];
	mov.u32 	%r26, %ntid.x;
	mov.u32 	%r27, %ctaid.x;
	mov.u32 	%r28, %tid.x;
	mad.lo.s32 	%r1, %r26, %r27, %r28;
	mov.u32 	%r29, %ntid.y;
	mov.u32 	%r30, %ctaid.y;
	mov.u32 	%r31, %tid.y;
	mad.lo.s32 	%r2, %r29, %r30, %r31;
	mov.u32 	%r32, %ntid.z;
	mov.u32 	%r33, %ctaid.z;
	mov.u32 	%r3, %tid.z;
	mad.lo.s32 	%r4, %r32, %r33, %r3;
	shl.b32 	%r5, %r24, 1;
	add.s32 	%r6, %r5, %r23;
	setp.ge.s32	%p1, %r2, %r6;
	setp.ge.s32	%p2, %r1, %r6;
	or.pred  	%p3, %p2, %p1;
	setp.ge.s32	%p4, %r4, %r25;
	or.pred  	%p5, %p3, %p4;
	@%p5 bra 	BB2_13;

	cvta.to.global.u64 	%rd3, %rd1;
	mad.lo.s32 	%r34, %r4, %r6, %r2;
	mad.lo.s32 	%r7, %r34, %r6, %r1;
	mul.wide.s32 	%rd4, %r7, 4;
	add.s64 	%rd5, %rd3, %rd4;
	ld.global.f32 	%f10, [%rd5];
	mad.lo.s32 	%r8, %r3, %r6, %r2;
	shl.b32 	%r35, %r8, 2;
	mov.u32 	%r36, shared;
	add.s32 	%r37, %r36, %r35;
	st.shared.f32 	[%r37], %f10;
	bar.sync 	0;
	shr.u32 	%r38, %r23, 31;
	add.s32 	%r39, %r23, %r38;
	shr.s32 	%r9, %r39, 1;
	add.s32 	%r40, %r9, %r5;
	setp.gt.s32	%p6, %r2, %r40;
	setp.lt.s32	%p7, %r2, %r9;
	mov.f32 	%f30, 0f00000000;
	or.pred  	%p8, %p6, %p7;
	@%p8 bra 	BB2_12;

	neg.s32 	%r41, %r23;
	shr.u32 	%r42, %r41, 31;
	sub.s32 	%r43, %r42, %r23;
	shr.s32 	%r62, %r43, 1;
	setp.le.s32	%p9, %r9, %r62;
	@%p9 bra 	BB2_12;

	sub.s32 	%r11, %r9, %r62;
	and.b32  	%r44, %r11, 3;
	mov.f32 	%f30, 0f00000000;
	setp.eq.s32	%p10, %r44, 0;
	@%p10 bra 	BB2_9;

	setp.eq.s32	%p11, %r44, 1;
	@%p11 bra 	BB2_8;

	setp.eq.s32	%p12, %r44, 2;
	@%p12 bra 	BB2_7;

	add.s32 	%r45, %r62, %r8;
	shl.b32 	%r46, %r45, 2;
	add.s32 	%r48, %r36, %r46;
	ld.shared.f32 	%f16, [%r48];
	add.f32 	%f30, %f16, 0f00000000;
	add.s32 	%r62, %r62, 1;

BB2_7:
	add.s32 	%r49, %r62, %r8;
	shl.b32 	%r50, %r49, 2;
	add.s32 	%r52, %r36, %r50;
	ld.shared.f32 	%f17, [%r52];
	add.f32 	%f30, %f30, %f17;
	add.s32 	%r62, %r62, 1;

BB2_8:
	add.s32 	%r53, %r62, %r8;
	shl.b32 	%r54, %r53, 2;
	add.s32 	%r56, %r36, %r54;
	ld.shared.f32 	%f18, [%r56];
	add.f32 	%f30, %f30, %f18;
	add.s32 	%r62, %r62, 1;

BB2_9:
	setp.lt.u32	%p13, %r11, 4;
	@%p13 bra 	BB2_12;

	add.s32 	%r57, %r8, %r62;
	shl.b32 	%r58, %r57, 2;
	add.s32 	%r63, %r36, %r58;

BB2_11:
	ld.shared.f32 	%f19, [%r63];
	add.f32 	%f20, %f30, %f19;
	ld.shared.f32 	%f21, [%r63+4];
	add.f32 	%f22, %f20, %f21;
	ld.shared.f32 	%f23, [%r63+8];
	add.f32 	%f24, %f22, %f23;
	ld.shared.f32 	%f25, [%r63+12];
	add.f32 	%f30, %f24, %f25;
	add.s32 	%r63, %r63, 16;
	add.s32 	%r62, %r62, 4;
	setp.lt.s32	%p14, %r62, %r9;
	@%p14 bra 	BB2_11;

BB2_12:
	cvta.to.global.u64 	%rd6, %rd2;
	add.s64 	%rd8, %rd6, %rd4;
	st.global.f32 	[%rd8], %f30;

BB2_13:
	ret;
}

	// .globl	normalizedCC
.visible .entry normalizedCC(
	.param .u64 normalizedCC_param_0,
	.param .u64 normalizedCC_param_1,
	.param .u64 normalizedCC_param_2,
	.param .u64 normalizedCC_param_3,
	.param .u32 normalizedCC_param_4,
	.param .u32 normalizedCC_param_5,
	.param .u32 normalizedCC_param_6
)
{
	.reg .pred 	%p<6>;
	.reg .f32 	%f<6>;
	.reg .b32 	%r<39>;
	.reg .b64 	%rd<17>;


	ld.param.u64 	%rd1, [normalizedCC_param_0];
	ld.param.u64 	%rd2, [normalizedCC_param_1];
	ld.param.u64 	%rd3, [normalizedCC_param_2];
	ld.param.u64 	%rd4, [normalizedCC_param_3];
	ld.param.u32 	%r5, [normalizedCC_param_4];
	ld.param.u32 	%r6, [normalizedCC_param_5];
	ld.param.u32 	%r7, [normalizedCC_param_6];
	mov.u32 	%r8, %ctaid.x;
	mov.u32 	%r9, %ntid.x;
	mov.u32 	%r10, %tid.x;
	mad.lo.s32 	%r1, %r9, %r8, %r10;
	mov.u32 	%r11, %ntid.y;
	mov.u32 	%r12, %ctaid.y;
	mov.u32 	%r13, %tid.y;
	mad.lo.s32 	%r2, %r11, %r12, %r13;
	mov.u32 	%r14, %ntid.z;
	mov.u32 	%r15, %ctaid.z;
	mov.u32 	%r16, %tid.z;
	mad.lo.s32 	%r3, %r14, %r15, %r16;
	shl.b32 	%r4, %r5, 1;
	setp.gt.s32	%p1, %r1, %r4;
	setp.gt.s32	%p2, %r2, %r4;
	or.pred  	%p3, %p1, %p2;
	setp.ge.s32	%p4, %r3, %r7;
	or.pred  	%p5, %p3, %p4;
	@%p5 bra 	BB3_2;

	cvta.to.global.u64 	%rd5, %rd2;
	sub.s32 	%r17, %r1, %r5;
	shr.s32 	%r18, %r17, 31;
	add.s32 	%r19, %r4, %r6;
	and.b32  	%r20, %r18, %r19;
	add.s32 	%r21, %r20, %r17;
	sub.s32 	%r22, %r2, %r5;
	shr.s32 	%r23, %r22, 31;
	and.b32  	%r24, %r23, %r19;
	add.s32 	%r25, %r24, %r22;
	mul.lo.s32 	%r26, %r3, %r19;
	add.s32 	%r27, %r25, %r26;
	mad.lo.s32 	%r28, %r27, %r19, %r21;
	shr.u32 	%r29, %r19, 31;
	add.s32 	%r30, %r19, %r29;
	shr.s32 	%r31, %r30, 1;
	add.s32 	%r32, %r26, %r22;
	add.s32 	%r33, %r32, %r31;
	add.s32 	%r34, %r31, %r17;
	mad.lo.s32 	%r35, %r33, %r19, %r34;
	add.s32 	%r36, %r4, 1;
	mad.lo.s32 	%r37, %r3, %r36, %r2;
	mad.lo.s32 	%r38, %r37, %r36, %r1;
	mul.wide.s32 	%rd6, %r3, 4;
	add.s64 	%rd7, %rd5, %rd6;
	cvta.to.global.u64 	%rd8, %rd3;
	mul.wide.s32 	%rd9, %r35, 4;
	add.s64 	%rd10, %rd8, %rd9;
	ld.global.f32 	%f1, [%rd10];
	ld.global.f32 	%f2, [%rd7];
	add.f32 	%f3, %f2, %f1;
	cvta.to.global.u64 	%rd11, %rd1;
	mul.wide.s32 	%rd12, %r28, 4;
	add.s64 	%rd13, %rd11, %rd12;
	ld.global.f32 	%f4, [%rd13];
	fma.rn.f32 	%f5, %f4, 0fC0000000, %f3;
	cvta.to.global.u64 	%rd14, %rd4;
	mul.wide.s32 	%rd15, %r38, 4;
	add.s64 	%rd16, %rd14, %rd15;
	st.global.f32 	[%rd16], %f5;

BB3_2:
	ret;
}

	// .globl	convertToTilesOverlapBorder
.visible .entry convertToTilesOverlapBorder(
	.param .u64 convertToTilesOverlapBorder_param_0,
	.param .u64 convertToTilesOverlapBorder_param_1,
	.param .u32 convertToTilesOverlapBorder_param_2,
	.param .u32 convertToTilesOverlapBorder_param_3,
	.param .u32 convertToTilesOverlapBorder_param_4,
	.param .u32 convertToTilesOverlapBorder_param_5,
	.param .u32 convertToTilesOverlapBorder_param_6,
	.param .u32 convertToTilesOverlapBorder_param_7,
	.param .u32 convertToTilesOverlapBorder_param_8,
	.param .align 8 .b8 convertToTilesOverlapBorder_param_9[8],
	.param .f32 convertToTilesOverlapBorder_param_10
)
{
	.local .align 4 .b8 	__local_depot4[28];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<35>;
	.reg .f32 	%f<101>;
	.reg .b32 	%r<206>;
	.reg .f64 	%fd<5>;
	.reg .b64 	%rd<48>;


	mov.u64 	%SPL, __local_depot4;
	cvta.local.u64 	%SP, %SPL;
	ld.param.u64 	%rd14, [convertToTilesOverlapBorder_param_0];
	ld.param.u64 	%rd15, [convertToTilesOverlapBorder_param_1];
	ld.param.u32 	%r60, [convertToTilesOverlapBorder_param_2];
	ld.param.u32 	%r61, [convertToTilesOverlapBorder_param_3];
	ld.param.u32 	%r62, [convertToTilesOverlapBorder_param_4];
	ld.param.u32 	%r63, [convertToTilesOverlapBorder_param_5];
	ld.param.u32 	%r64, [convertToTilesOverlapBorder_param_6];
	ld.param.u32 	%r65, [convertToTilesOverlapBorder_param_7];
	ld.param.u32 	%r66, [convertToTilesOverlapBorder_param_8];
	ld.param.f32 	%f1, [convertToTilesOverlapBorder_param_9];
	ld.param.f32 	%f2, [convertToTilesOverlapBorder_param_9+4];
	ld.param.f32 	%f27, [convertToTilesOverlapBorder_param_10];
	mov.u32 	%r67, %ntid.x;
	mov.u32 	%r68, %ctaid.x;
	mov.u32 	%r69, %tid.x;
	mad.lo.s32 	%r1, %r67, %r68, %r69;
	mov.u32 	%r70, %ntid.y;
	mov.u32 	%r71, %ctaid.y;
	mov.u32 	%r72, %tid.y;
	mad.lo.s32 	%r2, %r70, %r71, %r72;
	mov.u32 	%r73, %ntid.z;
	mov.u32 	%r74, %ctaid.z;
	mov.u32 	%r75, %tid.z;
	mad.lo.s32 	%r3, %r73, %r74, %r75;
	shl.b32 	%r76, %r63, 1;
	add.s32 	%r4, %r76, %r64;
	setp.ge.s32	%p1, %r2, %r4;
	setp.ge.s32	%p2, %r1, %r4;
	or.pred  	%p3, %p2, %p1;
	mul.lo.s32 	%r77, %r66, %r65;
	setp.ge.s32	%p4, %r3, %r77;
	or.pred  	%p5, %p3, %p4;
	@%p5 bra 	BB4_34;

	cvta.to.global.u64 	%rd16, %rd15;
	mad.lo.s32 	%r78, %r3, %r4, %r2;
	mad.lo.s32 	%r79, %r78, %r4, %r1;
	setp.lt.s32	%p6, %r2, %r63;
	setp.lt.s32	%p7, %r1, %r63;
	or.pred  	%p8, %p7, %p6;
	add.s32 	%r80, %r64, %r63;
	setp.ge.s32	%p9, %r1, %r80;
	or.pred  	%p10, %p8, %p9;
	setp.ge.s32	%p11, %r2, %r80;
	or.pred  	%p12, %p10, %p11;
	mul.wide.s32 	%rd17, %r79, 4;
	add.s64 	%rd1, %rd16, %rd17;
	@%p12 bra 	BB4_33;
	bra.uni 	BB4_2;

BB4_33:
	mov.u32 	%r189, 0;
	st.global.u32 	[%rd1], %r189;
	bra.uni 	BB4_34;

BB4_2:
	div.s32 	%r5, %r3, %r65;
	mul.f32 	%f28, %f27, 0f3F22F983;
	cvt.rni.s32.f32	%r205, %f28;
	cvt.rn.f32.s32	%f29, %r205;
	mov.f32 	%f30, 0fBFC90FDA;
	fma.rn.f32 	%f31, %f29, %f30, %f27;
	mov.f32 	%f32, 0fB3A22168;
	fma.rn.f32 	%f33, %f29, %f32, %f31;
	mov.f32 	%f34, 0fA7C234C5;
	fma.rn.f32 	%f98, %f29, %f34, %f33;
	abs.f32 	%f4, %f27;
	setp.leu.f32	%p13, %f4, 0f47CE4780;
	mov.u32 	%r197, %r205;
	mov.f32 	%f95, %f98;
	@%p13 bra 	BB4_13;

	setp.eq.f32	%p14, %f4, 0f7F800000;
	@%p14 bra 	BB4_12;
	bra.uni 	BB4_4;

BB4_12:
	mov.f32 	%f37, 0f00000000;
	mul.rn.f32 	%f95, %f27, %f37;
	mov.u32 	%r197, %r205;
	bra.uni 	BB4_13;

BB4_4:
	mov.b32 	 %r83, %f27;
	shl.b32 	%r84, %r83, 8;
	or.b32  	%r7, %r84, -2147483648;
	add.u64 	%rd19, %SP, 0;
	add.u64 	%rd45, %SPL, 0;
	mov.u32 	%r191, 0;
	mov.u64 	%rd44, __cudart_i2opi_f;
	mov.u32 	%r190, -6;

BB4_5:
	.pragma "nounroll";
	ld.const.u32 	%r87, [%rd44];
	// inline asm
	{
	mad.lo.cc.u32   %r85, %r87, %r7, %r191;
	madc.hi.u32     %r191, %r87, %r7,  0;
	}
	// inline asm
	st.local.u32 	[%rd45], %r85;
	add.s64 	%rd45, %rd45, 4;
	add.s64 	%rd44, %rd44, 4;
	add.s32 	%r190, %r190, 1;
	setp.ne.s32	%p15, %r190, 0;
	@%p15 bra 	BB4_5;

	bfe.u32 	%r91, %r83, 23, 8;
	add.s32 	%r92, %r91, -128;
	shr.u32 	%r93, %r92, 5;
	and.b32  	%r12, %r83, -2147483648;
	cvta.to.local.u64 	%rd21, %rd19;
	st.local.u32 	[%rd21+24], %r191;
	bfe.u32 	%r13, %r83, 23, 5;
	mov.u32 	%r94, 6;
	sub.s32 	%r95, %r94, %r93;
	mul.wide.s32 	%rd22, %r95, 4;
	add.s64 	%rd7, %rd21, %rd22;
	ld.local.u32 	%r193, [%rd7];
	ld.local.u32 	%r192, [%rd7+-4];
	setp.eq.s32	%p16, %r13, 0;
	@%p16 bra 	BB4_8;

	mov.u32 	%r96, 32;
	sub.s32 	%r97, %r96, %r13;
	shr.u32 	%r98, %r192, %r97;
	shl.b32 	%r99, %r193, %r13;
	add.s32 	%r193, %r98, %r99;
	ld.local.u32 	%r100, [%rd7+-8];
	shr.u32 	%r101, %r100, %r97;
	shl.b32 	%r102, %r192, %r13;
	add.s32 	%r192, %r101, %r102;

BB4_8:
	shr.u32 	%r103, %r192, 30;
	shl.b32 	%r104, %r193, 2;
	add.s32 	%r195, %r104, %r103;
	shl.b32 	%r21, %r192, 2;
	shr.u32 	%r105, %r195, 31;
	shr.u32 	%r106, %r193, 30;
	add.s32 	%r22, %r105, %r106;
	setp.eq.s32	%p17, %r105, 0;
	@%p17 bra 	BB4_9;

	not.b32 	%r107, %r195;
	neg.s32 	%r194, %r21;
	setp.eq.s32	%p18, %r21, 0;
	selp.u32	%r108, 1, 0, %p18;
	add.s32 	%r195, %r108, %r107;
	xor.b32  	%r196, %r12, -2147483648;
	bra.uni 	BB4_11;

BB4_9:
	mov.u32 	%r194, %r21;
	mov.u32 	%r196, %r12;

BB4_11:
	cvt.u64.u32	%rd23, %r195;
	shl.b64 	%rd24, %rd23, 32;
	cvt.u64.u32	%rd25, %r194;
	or.b64  	%rd26, %rd24, %rd25;
	cvt.rn.f64.s64	%fd1, %rd26;
	mul.f64 	%fd2, %fd1, 0d3BF921FB54442D19;
	cvt.rn.f32.f64	%f35, %fd2;
	neg.f32 	%f36, %f35;
	setp.eq.s32	%p19, %r196, 0;
	selp.f32	%f95, %f35, %f36, %p19;
	setp.eq.s32	%p20, %r12, 0;
	neg.s32 	%r109, %r22;
	selp.b32	%r197, %r22, %r109, %p20;

BB4_13:
	and.b32  	%r31, %r197, 1;
	setp.eq.s32	%p21, %r31, 0;
	selp.f32	%f8, %f95, 0f3F800000, %p21;
	mul.rn.f32 	%f9, %f95, %f95;
	mov.f32 	%f39, 0f00000000;
	fma.rn.f32 	%f10, %f9, %f8, %f39;
	mov.f32 	%f96, 0fB94D4153;
	@%p21 bra 	BB4_15;

	mov.f32 	%f40, 0fBAB607ED;
	mov.f32 	%f41, 0f37CBAC00;
	fma.rn.f32 	%f96, %f41, %f9, %f40;

BB4_15:
	selp.f32	%f42, 0f3C0885E4, 0f3D2AAABB, %p21;
	fma.rn.f32 	%f43, %f96, %f9, %f42;
	selp.f32	%f44, 0fBE2AAAA8, 0fBEFFFFFF, %p21;
	fma.rn.f32 	%f45, %f43, %f9, %f44;
	fma.rn.f32 	%f97, %f45, %f10, %f8;
	and.b32  	%r110, %r197, 2;
	setp.eq.s32	%p23, %r110, 0;
	@%p23 bra 	BB4_17;

	mov.f32 	%f47, 0fBF800000;
	fma.rn.f32 	%f97, %f97, %f47, %f39;

BB4_17:
	@%p13 bra 	BB4_28;

	setp.eq.f32	%p25, %f4, 0f7F800000;
	@%p25 bra 	BB4_27;
	bra.uni 	BB4_19;

BB4_27:
	mul.rn.f32 	%f98, %f27, %f39;
	bra.uni 	BB4_28;

BB4_19:
	mov.b32 	 %r32, %f27;
	shr.u32 	%r33, %r32, 23;
	shl.b32 	%r113, %r32, 8;
	or.b32  	%r34, %r113, -2147483648;
	add.u64 	%rd28, %SP, 0;
	add.u64 	%rd47, %SPL, 0;
	mov.u32 	%r199, 0;
	mov.u64 	%rd46, __cudart_i2opi_f;
	mov.u32 	%r198, -6;

BB4_20:
	.pragma "nounroll";
	ld.const.u32 	%r116, [%rd46];
	// inline asm
	{
	mad.lo.cc.u32   %r114, %r116, %r34, %r199;
	madc.hi.u32     %r199, %r116, %r34,  0;
	}
	// inline asm
	st.local.u32 	[%rd47], %r114;
	add.s64 	%rd47, %rd47, 4;
	add.s64 	%rd46, %rd46, 4;
	add.s32 	%r198, %r198, 1;
	setp.ne.s32	%p26, %r198, 0;
	@%p26 bra 	BB4_20;

	and.b32  	%r119, %r33, 255;
	add.s32 	%r120, %r119, -128;
	shr.u32 	%r121, %r120, 5;
	and.b32  	%r39, %r32, -2147483648;
	cvta.to.local.u64 	%rd30, %rd28;
	st.local.u32 	[%rd30+24], %r199;
	mov.u32 	%r122, 6;
	sub.s32 	%r123, %r122, %r121;
	mul.wide.s32 	%rd31, %r123, 4;
	add.s64 	%rd13, %rd30, %rd31;
	ld.local.u32 	%r201, [%rd13];
	ld.local.u32 	%r200, [%rd13+-4];
	and.b32  	%r42, %r33, 31;
	setp.eq.s32	%p27, %r42, 0;
	@%p27 bra 	BB4_23;

	mov.u32 	%r124, 32;
	sub.s32 	%r125, %r124, %r42;
	shr.u32 	%r126, %r200, %r125;
	shl.b32 	%r127, %r201, %r42;
	add.s32 	%r201, %r126, %r127;
	ld.local.u32 	%r128, [%rd13+-8];
	shr.u32 	%r129, %r128, %r125;
	shl.b32 	%r130, %r200, %r42;
	add.s32 	%r200, %r129, %r130;

BB4_23:
	shr.u32 	%r131, %r200, 30;
	shl.b32 	%r132, %r201, 2;
	add.s32 	%r203, %r132, %r131;
	shl.b32 	%r48, %r200, 2;
	shr.u32 	%r133, %r203, 31;
	shr.u32 	%r134, %r201, 30;
	add.s32 	%r49, %r133, %r134;
	setp.eq.s32	%p28, %r133, 0;
	@%p28 bra 	BB4_24;

	not.b32 	%r135, %r203;
	neg.s32 	%r202, %r48;
	setp.eq.s32	%p29, %r48, 0;
	selp.u32	%r136, 1, 0, %p29;
	add.s32 	%r203, %r136, %r135;
	xor.b32  	%r204, %r39, -2147483648;
	bra.uni 	BB4_26;

BB4_24:
	mov.u32 	%r202, %r48;
	mov.u32 	%r204, %r39;

BB4_26:
	cvt.u64.u32	%rd32, %r203;
	shl.b64 	%rd33, %rd32, 32;
	cvt.u64.u32	%rd34, %r202;
	or.b64  	%rd35, %rd33, %rd34;
	cvt.rn.f64.s64	%fd3, %rd35;
	mul.f64 	%fd4, %fd3, 0d3BF921FB54442D19;
	cvt.rn.f32.f64	%f48, %fd4;
	neg.f32 	%f49, %f48;
	setp.eq.s32	%p30, %r204, 0;
	selp.f32	%f98, %f48, %f49, %p30;
	setp.eq.s32	%p31, %r39, 0;
	neg.s32 	%r137, %r49;
	selp.b32	%r205, %r49, %r137, %p31;

BB4_28:
	add.s32 	%r58, %r205, 1;
	and.b32  	%r59, %r58, 1;
	setp.eq.s32	%p32, %r59, 0;
	selp.f32	%f19, %f98, 0f3F800000, %p32;
	mul.rn.f32 	%f20, %f98, %f98;
	fma.rn.f32 	%f21, %f20, %f19, %f39;
	mov.f32 	%f99, 0fB94D4153;
	@%p32 bra 	BB4_30;

	mov.f32 	%f53, 0fBAB607ED;
	mov.f32 	%f54, 0f37CBAC00;
	fma.rn.f32 	%f99, %f54, %f20, %f53;

BB4_30:
	selp.f32	%f55, 0f3C0885E4, 0f3D2AAABB, %p32;
	fma.rn.f32 	%f56, %f99, %f20, %f55;
	selp.f32	%f57, 0fBE2AAAA8, 0fBEFFFFFF, %p32;
	fma.rn.f32 	%f58, %f56, %f20, %f57;
	fma.rn.f32 	%f100, %f58, %f21, %f19;
	and.b32  	%r138, %r58, 2;
	setp.eq.s32	%p34, %r138, 0;
	@%p34 bra 	BB4_32;

	mov.f32 	%f60, 0fBF800000;
	fma.rn.f32 	%f100, %f100, %f60, %f39;

BB4_32:
	mul.f32 	%f61, %f2, %f97;
	mul.f32 	%f62, %f1, %f100;
	sub.f32 	%f63, %f61, %f62;
	mul.f32 	%f64, %f2, %f100;
	neg.f32 	%f65, %f64;
	mul.f32 	%f66, %f1, %f97;
	sub.f32 	%f67, %f65, %f66;
	mul.lo.s32 	%r143, %r5, %r65;
	sub.s32 	%r144, %r3, %r143;
	mul.lo.s32 	%r145, %r144, %r64;
	shr.u32 	%r146, %r64, 31;
	add.s32 	%r147, %r64, %r146;
	shr.s32 	%r148, %r147, 1;
	add.s32 	%r149, %r148, %r145;
	shr.u32 	%r150, %r60, 31;
	add.s32 	%r151, %r60, %r150;
	shr.s32 	%r152, %r151, 1;
	sub.s32 	%r153, %r149, %r152;
	cvt.rn.f32.s32	%f68, %r153;
	mul.lo.s32 	%r154, %r5, %r64;
	add.s32 	%r155, %r148, %r154;
	shr.u32 	%r156, %r61, 31;
	add.s32 	%r157, %r61, %r156;
	shr.s32 	%r158, %r157, 1;
	sub.s32 	%r159, %r155, %r158;
	cvt.rn.f32.s32	%f69, %r159;
	mul.f32 	%f70, %f100, %f68;
	mul.f32 	%f71, %f97, %f69;
	sub.f32 	%f72, %f70, %f71;
	sub.f32 	%f73, %f72, %f68;
	add.f32 	%f74, %f63, %f73;
	mul.f32 	%f75, %f100, %f69;
	fma.rn.f32 	%f76, %f97, %f68, %f75;
	sub.f32 	%f77, %f76, %f69;
	add.f32 	%f78, %f67, %f77;
	add.s32 	%r164, %r145, %r1;
	mov.b32 	 %r165, %f74;
	and.b32  	%r166, %r165, -2147483648;
	or.b32  	%r167, %r166, 1056964608;
	mov.b32 	 %f79, %r167;
	add.rz.f32 	%f80, %f74, %f79;
	cvt.rzi.f32.f32	%f81, %f80;
	cvt.rzi.s32.f32	%r168, %f81;
	add.s32 	%r169, %r164, %r168;
	add.s32 	%r174, %r154, %r2;
	mov.b32 	 %r175, %f78;
	and.b32  	%r176, %r175, -2147483648;
	or.b32  	%r177, %r176, 1056964608;
	mov.b32 	 %f82, %r177;
	add.rz.f32 	%f83, %f78, %f82;
	cvt.rzi.f32.f32	%f84, %f83;
	cvt.rzi.s32.f32	%r178, %f84;
	add.s32 	%r179, %r174, %r178;
	cvt.rn.f32.s32	%f85, %r169;
	max.f32 	%f87, %f85, %f39;
	add.s32 	%r180, %r60, -1;
	cvt.rn.f32.s32	%f88, %r180;
	min.f32 	%f89, %f87, %f88;
	cvt.rzi.s32.f32	%r181, %f89;
	cvt.rn.f32.s32	%f90, %r179;
	max.f32 	%f91, %f90, %f39;
	add.s32 	%r182, %r61, -1;
	cvt.rn.f32.s32	%f92, %r182;
	min.f32 	%f93, %f91, %f92;
	cvt.rzi.s32.f32	%r183, %f93;
	mul.lo.s32 	%r184, %r183, %r62;
	cvta.to.global.u64 	%rd36, %rd14;
	cvt.s64.s32	%rd37, %r184;
	add.s64 	%rd38, %rd36, %rd37;
	mul.wide.s32 	%rd39, %r181, 4;
	add.s64 	%rd40, %rd38, %rd39;
	ld.global.f32 	%f94, [%rd40];
	st.global.f32 	[%rd1], %f94;

BB4_34:
	ret;
}

	// .globl	convertToTilesOverlapPreShift
.visible .entry convertToTilesOverlapPreShift(
	.param .u64 convertToTilesOverlapPreShift_param_0,
	.param .u64 convertToTilesOverlapPreShift_param_1,
	.param .u64 convertToTilesOverlapPreShift_param_2,
	.param .u32 convertToTilesOverlapPreShift_param_3,
	.param .u32 convertToTilesOverlapPreShift_param_4,
	.param .u32 convertToTilesOverlapPreShift_param_5,
	.param .u32 convertToTilesOverlapPreShift_param_6,
	.param .u32 convertToTilesOverlapPreShift_param_7,
	.param .u32 convertToTilesOverlapPreShift_param_8,
	.param .u32 convertToTilesOverlapPreShift_param_9,
	.param .u32 convertToTilesOverlapPreShift_param_10,
	.param .align 8 .b8 convertToTilesOverlapPreShift_param_11[8],
	.param .f32 convertToTilesOverlapPreShift_param_12
)
{
	.local .align 4 .b8 	__local_depot5[28];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<28>;
	.reg .f32 	%f<107>;
	.reg .b32 	%r<206>;
	.reg .f64 	%fd<5>;
	.reg .b64 	%rd<51>;


	mov.u64 	%SPL, __local_depot5;
	cvta.local.u64 	%SP, %SPL;
	ld.param.u64 	%rd13, [convertToTilesOverlapPreShift_param_0];
	ld.param.u64 	%rd14, [convertToTilesOverlapPreShift_param_1];
	ld.param.u64 	%rd15, [convertToTilesOverlapPreShift_param_2];
	ld.param.u32 	%r57, [convertToTilesOverlapPreShift_param_3];
	ld.param.u32 	%r58, [convertToTilesOverlapPreShift_param_4];
	ld.param.u32 	%r59, [convertToTilesOverlapPreShift_param_5];
	ld.param.u32 	%r60, [convertToTilesOverlapPreShift_param_6];
	ld.param.u32 	%r61, [convertToTilesOverlapPreShift_param_7];
	ld.param.u32 	%r62, [convertToTilesOverlapPreShift_param_8];
	ld.param.u32 	%r63, [convertToTilesOverlapPreShift_param_9];
	ld.param.u32 	%r64, [convertToTilesOverlapPreShift_param_10];
	ld.param.f32 	%f1, [convertToTilesOverlapPreShift_param_11];
	ld.param.f32 	%f2, [convertToTilesOverlapPreShift_param_11+4];
	ld.param.f32 	%f29, [convertToTilesOverlapPreShift_param_12];
	mov.u32 	%r65, %ntid.x;
	mov.u32 	%r66, %ctaid.x;
	mov.u32 	%r67, %tid.x;
	mad.lo.s32 	%r68, %r65, %r66, %r67;
	mov.u32 	%r69, %ntid.y;
	mov.u32 	%r70, %ctaid.y;
	mov.u32 	%r71, %tid.y;
	mad.lo.s32 	%r72, %r69, %r70, %r71;
	mov.u32 	%r73, %ntid.z;
	mov.u32 	%r74, %ctaid.z;
	mov.u32 	%r75, %tid.z;
	mad.lo.s32 	%r1, %r73, %r74, %r75;
	shl.b32 	%r76, %r61, 1;
	add.s32 	%r77, %r76, %r62;
	setp.ge.s32	%p1, %r72, %r77;
	setp.ge.s32	%p2, %r68, %r77;
	or.pred  	%p3, %p2, %p1;
	mul.lo.s32 	%r78, %r64, %r63;
	setp.ge.s32	%p4, %r1, %r78;
	or.pred  	%p5, %p3, %p4;
	@%p5 bra 	BB5_32;

	div.s32 	%r2, %r1, %r63;
	mul.lo.s32 	%r79, %r2, %r63;
	sub.s32 	%r80, %r1, %r79;
	mul.lo.s32 	%r81, %r2, %r57;
	cvta.to.global.u64 	%rd16, %rd15;
	cvt.s64.s32	%rd17, %r81;
	add.s64 	%rd18, %rd16, %rd17;
	mul.wide.s32 	%rd19, %r80, 8;
	add.s64 	%rd20, %rd18, %rd19;
	ld.global.v2.f32 	{%f30, %f31}, [%rd20];
	mul.f32 	%f32, %f29, 0f3F22F983;
	cvt.rni.s32.f32	%r205, %f32;
	cvt.rn.f32.s32	%f33, %r205;
	mov.f32 	%f34, 0fBFC90FDA;
	fma.rn.f32 	%f35, %f33, %f34, %f29;
	mov.f32 	%f36, 0fB3A22168;
	fma.rn.f32 	%f37, %f33, %f36, %f35;
	mov.f32 	%f38, 0fA7C234C5;
	fma.rn.f32 	%f104, %f33, %f38, %f37;
	abs.f32 	%f6, %f29;
	setp.leu.f32	%p6, %f6, 0f47CE4780;
	mov.u32 	%r197, %r205;
	mov.f32 	%f101, %f104;
	@%p6 bra 	BB5_12;

	setp.eq.f32	%p7, %f6, 0f7F800000;
	@%p7 bra 	BB5_11;
	bra.uni 	BB5_3;

BB5_11:
	mov.f32 	%f41, 0f00000000;
	mul.rn.f32 	%f101, %f29, %f41;
	mov.u32 	%r197, %r205;
	bra.uni 	BB5_12;

BB5_3:
	mov.b32 	 %r84, %f29;
	shl.b32 	%r85, %r84, 8;
	or.b32  	%r4, %r85, -2147483648;
	add.u64 	%rd22, %SP, 0;
	add.u64 	%rd48, %SPL, 0;
	mov.u32 	%r191, 0;
	mov.u64 	%rd47, __cudart_i2opi_f;
	mov.u32 	%r190, -6;

BB5_4:
	.pragma "nounroll";
	ld.const.u32 	%r88, [%rd47];
	// inline asm
	{
	mad.lo.cc.u32   %r86, %r88, %r4, %r191;
	madc.hi.u32     %r191, %r88, %r4,  0;
	}
	// inline asm
	st.local.u32 	[%rd48], %r86;
	add.s64 	%rd48, %rd48, 4;
	add.s64 	%rd47, %rd47, 4;
	add.s32 	%r190, %r190, 1;
	setp.ne.s32	%p8, %r190, 0;
	@%p8 bra 	BB5_4;

	bfe.u32 	%r92, %r84, 23, 8;
	add.s32 	%r93, %r92, -128;
	shr.u32 	%r94, %r93, 5;
	and.b32  	%r9, %r84, -2147483648;
	cvta.to.local.u64 	%rd24, %rd22;
	st.local.u32 	[%rd24+24], %r191;
	bfe.u32 	%r10, %r84, 23, 5;
	mov.u32 	%r95, 6;
	sub.s32 	%r96, %r95, %r94;
	mul.wide.s32 	%rd25, %r96, 4;
	add.s64 	%rd6, %rd24, %rd25;
	ld.local.u32 	%r193, [%rd6];
	ld.local.u32 	%r192, [%rd6+-4];
	setp.eq.s32	%p9, %r10, 0;
	@%p9 bra 	BB5_7;

	mov.u32 	%r97, 32;
	sub.s32 	%r98, %r97, %r10;
	shr.u32 	%r99, %r192, %r98;
	shl.b32 	%r100, %r193, %r10;
	add.s32 	%r193, %r99, %r100;
	ld.local.u32 	%r101, [%rd6+-8];
	shr.u32 	%r102, %r101, %r98;
	shl.b32 	%r103, %r192, %r10;
	add.s32 	%r192, %r102, %r103;

BB5_7:
	shr.u32 	%r104, %r192, 30;
	shl.b32 	%r105, %r193, 2;
	add.s32 	%r195, %r105, %r104;
	shl.b32 	%r18, %r192, 2;
	shr.u32 	%r106, %r195, 31;
	shr.u32 	%r107, %r193, 30;
	add.s32 	%r19, %r106, %r107;
	setp.eq.s32	%p10, %r106, 0;
	@%p10 bra 	BB5_8;

	not.b32 	%r108, %r195;
	neg.s32 	%r194, %r18;
	setp.eq.s32	%p11, %r18, 0;
	selp.u32	%r109, 1, 0, %p11;
	add.s32 	%r195, %r109, %r108;
	xor.b32  	%r196, %r9, -2147483648;
	bra.uni 	BB5_10;

BB5_8:
	mov.u32 	%r194, %r18;
	mov.u32 	%r196, %r9;

BB5_10:
	cvt.u64.u32	%rd26, %r195;
	shl.b64 	%rd27, %rd26, 32;
	cvt.u64.u32	%rd28, %r194;
	or.b64  	%rd29, %rd27, %rd28;
	cvt.rn.f64.s64	%fd1, %rd29;
	mul.f64 	%fd2, %fd1, 0d3BF921FB54442D19;
	cvt.rn.f32.f64	%f39, %fd2;
	neg.f32 	%f40, %f39;
	setp.eq.s32	%p12, %r196, 0;
	selp.f32	%f101, %f39, %f40, %p12;
	setp.eq.s32	%p13, %r9, 0;
	neg.s32 	%r110, %r19;
	selp.b32	%r197, %r19, %r110, %p13;

BB5_12:
	and.b32  	%r28, %r197, 1;
	setp.eq.s32	%p14, %r28, 0;
	selp.f32	%f10, %f101, 0f3F800000, %p14;
	mul.rn.f32 	%f11, %f101, %f101;
	mov.f32 	%f43, 0f00000000;
	fma.rn.f32 	%f12, %f11, %f10, %f43;
	mov.f32 	%f102, 0fB94D4153;
	@%p14 bra 	BB5_14;

	mov.f32 	%f44, 0fBAB607ED;
	mov.f32 	%f45, 0f37CBAC00;
	fma.rn.f32 	%f102, %f45, %f11, %f44;

BB5_14:
	selp.f32	%f46, 0f3C0885E4, 0f3D2AAABB, %p14;
	fma.rn.f32 	%f47, %f102, %f11, %f46;
	selp.f32	%f48, 0fBE2AAAA8, 0fBEFFFFFF, %p14;
	fma.rn.f32 	%f49, %f47, %f11, %f48;
	fma.rn.f32 	%f103, %f49, %f12, %f10;
	and.b32  	%r111, %r197, 2;
	setp.eq.s32	%p16, %r111, 0;
	@%p16 bra 	BB5_16;

	mov.f32 	%f51, 0fBF800000;
	fma.rn.f32 	%f103, %f103, %f51, %f43;

BB5_16:
	@%p6 bra 	BB5_27;

	setp.eq.f32	%p18, %f6, 0f7F800000;
	@%p18 bra 	BB5_26;
	bra.uni 	BB5_18;

BB5_26:
	mul.rn.f32 	%f104, %f29, %f43;
	bra.uni 	BB5_27;

BB5_18:
	mov.b32 	 %r29, %f29;
	shr.u32 	%r30, %r29, 23;
	shl.b32 	%r114, %r29, 8;
	or.b32  	%r31, %r114, -2147483648;
	add.u64 	%rd31, %SP, 0;
	add.u64 	%rd50, %SPL, 0;
	mov.u32 	%r199, 0;
	mov.u64 	%rd49, __cudart_i2opi_f;
	mov.u32 	%r198, -6;

BB5_19:
	.pragma "nounroll";
	ld.const.u32 	%r117, [%rd49];
	// inline asm
	{
	mad.lo.cc.u32   %r115, %r117, %r31, %r199;
	madc.hi.u32     %r199, %r117, %r31,  0;
	}
	// inline asm
	st.local.u32 	[%rd50], %r115;
	add.s64 	%rd50, %rd50, 4;
	add.s64 	%rd49, %rd49, 4;
	add.s32 	%r198, %r198, 1;
	setp.ne.s32	%p19, %r198, 0;
	@%p19 bra 	BB5_19;

	and.b32  	%r120, %r30, 255;
	add.s32 	%r121, %r120, -128;
	shr.u32 	%r122, %r121, 5;
	and.b32  	%r36, %r29, -2147483648;
	cvta.to.local.u64 	%rd33, %rd31;
	st.local.u32 	[%rd33+24], %r199;
	mov.u32 	%r123, 6;
	sub.s32 	%r124, %r123, %r122;
	mul.wide.s32 	%rd34, %r124, 4;
	add.s64 	%rd12, %rd33, %rd34;
	ld.local.u32 	%r201, [%rd12];
	ld.local.u32 	%r200, [%rd12+-4];
	and.b32  	%r39, %r30, 31;
	setp.eq.s32	%p20, %r39, 0;
	@%p20 bra 	BB5_22;

	mov.u32 	%r125, 32;
	sub.s32 	%r126, %r125, %r39;
	shr.u32 	%r127, %r200, %r126;
	shl.b32 	%r128, %r201, %r39;
	add.s32 	%r201, %r127, %r128;
	ld.local.u32 	%r129, [%rd12+-8];
	shr.u32 	%r130, %r129, %r126;
	shl.b32 	%r131, %r200, %r39;
	add.s32 	%r200, %r130, %r131;

BB5_22:
	shr.u32 	%r132, %r200, 30;
	shl.b32 	%r133, %r201, 2;
	add.s32 	%r203, %r133, %r132;
	shl.b32 	%r45, %r200, 2;
	shr.u32 	%r134, %r203, 31;
	shr.u32 	%r135, %r201, 30;
	add.s32 	%r46, %r134, %r135;
	setp.eq.s32	%p21, %r134, 0;
	@%p21 bra 	BB5_23;

	not.b32 	%r136, %r203;
	neg.s32 	%r202, %r45;
	setp.eq.s32	%p22, %r45, 0;
	selp.u32	%r137, 1, 0, %p22;
	add.s32 	%r203, %r137, %r136;
	xor.b32  	%r204, %r36, -2147483648;
	bra.uni 	BB5_25;

BB5_23:
	mov.u32 	%r202, %r45;
	mov.u32 	%r204, %r36;

BB5_25:
	cvt.u64.u32	%rd35, %r203;
	shl.b64 	%rd36, %rd35, 32;
	cvt.u64.u32	%rd37, %r202;
	or.b64  	%rd38, %rd36, %rd37;
	cvt.rn.f64.s64	%fd3, %rd38;
	mul.f64 	%fd4, %fd3, 0d3BF921FB54442D19;
	cvt.rn.f32.f64	%f52, %fd4;
	neg.f32 	%f53, %f52;
	setp.eq.s32	%p23, %r204, 0;
	selp.f32	%f104, %f52, %f53, %p23;
	setp.eq.s32	%p24, %r36, 0;
	neg.s32 	%r138, %r46;
	selp.b32	%r205, %r46, %r138, %p24;

BB5_27:
	add.s32 	%r55, %r205, 1;
	and.b32  	%r56, %r55, 1;
	setp.eq.s32	%p25, %r56, 0;
	selp.f32	%f21, %f104, 0f3F800000, %p25;
	mul.rn.f32 	%f22, %f104, %f104;
	fma.rn.f32 	%f23, %f22, %f21, %f43;
	mov.f32 	%f105, 0fB94D4153;
	@%p25 bra 	BB5_29;

	mov.f32 	%f57, 0fBAB607ED;
	mov.f32 	%f58, 0f37CBAC00;
	fma.rn.f32 	%f105, %f58, %f22, %f57;

BB5_29:
	selp.f32	%f59, 0f3C0885E4, 0f3D2AAABB, %p25;
	fma.rn.f32 	%f60, %f105, %f22, %f59;
	selp.f32	%f61, 0fBE2AAAA8, 0fBEFFFFFF, %p25;
	fma.rn.f32 	%f62, %f60, %f22, %f61;
	fma.rn.f32 	%f106, %f62, %f23, %f21;
	and.b32  	%r139, %r55, 2;
	setp.eq.s32	%p27, %r139, 0;
	@%p27 bra 	BB5_31;

	mov.f32 	%f64, 0fBF800000;
	fma.rn.f32 	%f106, %f106, %f64, %f43;

BB5_31:
	mul.f32 	%f65, %f2, %f103;
	mul.f32 	%f66, %f1, %f106;
	sub.f32 	%f67, %f65, %f66;
	add.f32 	%f68, %f30, %f67;
	mul.f32 	%f69, %f2, %f106;
	neg.f32 	%f70, %f69;
	mul.f32 	%f71, %f1, %f103;
	sub.f32 	%f72, %f70, %f71;
	add.f32 	%f73, %f31, %f72;
	mul.lo.s32 	%r146, %r80, %r62;
	shr.u32 	%r147, %r62, 31;
	add.s32 	%r148, %r62, %r147;
	shr.s32 	%r149, %r148, 1;
	add.s32 	%r150, %r149, %r146;
	shr.u32 	%r151, %r58, 31;
	add.s32 	%r152, %r58, %r151;
	shr.s32 	%r153, %r152, 1;
	sub.s32 	%r154, %r150, %r153;
	cvt.rn.f32.s32	%f74, %r154;
	mul.lo.s32 	%r155, %r2, %r62;
	add.s32 	%r156, %r149, %r155;
	shr.u32 	%r157, %r59, 31;
	add.s32 	%r158, %r59, %r157;
	shr.s32 	%r159, %r158, 1;
	sub.s32 	%r160, %r156, %r159;
	cvt.rn.f32.s32	%f75, %r160;
	mul.f32 	%f76, %f106, %f74;
	mul.f32 	%f77, %f103, %f75;
	sub.f32 	%f78, %f76, %f77;
	sub.f32 	%f79, %f78, %f74;
	add.f32 	%f80, %f68, %f79;
	mul.f32 	%f81, %f106, %f75;
	fma.rn.f32 	%f82, %f103, %f74, %f81;
	sub.f32 	%f83, %f82, %f75;
	add.f32 	%f84, %f73, %f83;
	add.s32 	%r165, %r146, %r68;
	mov.b32 	 %r166, %f80;
	and.b32  	%r167, %r166, -2147483648;
	or.b32  	%r168, %r167, 1056964608;
	mov.b32 	 %f85, %r168;
	add.rz.f32 	%f86, %f80, %f85;
	cvt.rzi.f32.f32	%f87, %f86;
	cvt.rzi.s32.f32	%r169, %f87;
	add.s32 	%r170, %r165, %r169;
	add.s32 	%r175, %r155, %r72;
	mov.b32 	 %r176, %f84;
	and.b32  	%r177, %r176, -2147483648;
	or.b32  	%r178, %r177, 1056964608;
	mov.b32 	 %f88, %r178;
	add.rz.f32 	%f89, %f84, %f88;
	cvt.rzi.f32.f32	%f90, %f89;
	cvt.rzi.s32.f32	%r179, %f90;
	add.s32 	%r180, %r175, %r179;
	cvt.rn.f32.s32	%f91, %r170;
	max.f32 	%f93, %f91, %f43;
	add.s32 	%r181, %r58, -1;
	cvt.rn.f32.s32	%f94, %r181;
	min.f32 	%f95, %f93, %f94;
	cvt.rzi.s32.f32	%r182, %f95;
	cvt.rn.f32.s32	%f96, %r180;
	max.f32 	%f97, %f96, %f43;
	add.s32 	%r183, %r59, -1;
	cvt.rn.f32.s32	%f98, %r183;
	min.f32 	%f99, %f97, %f98;
	cvt.rzi.s32.f32	%r184, %f99;
	mul.lo.s32 	%r185, %r184, %r60;
	cvta.to.global.u64 	%rd39, %rd13;
	cvt.s64.s32	%rd40, %r185;
	add.s64 	%rd41, %rd39, %rd40;
	mul.wide.s32 	%rd42, %r182, 4;
	add.s64 	%rd43, %rd41, %rd42;
	ld.global.f32 	%f100, [%rd43];
	mad.lo.s32 	%r188, %r1, %r77, %r72;
	mad.lo.s32 	%r189, %r188, %r77, %r68;
	cvta.to.global.u64 	%rd44, %rd14;
	mul.wide.s32 	%rd45, %r189, 4;
	add.s64 	%rd46, %rd44, %rd45;
	st.global.f32 	[%rd46], %f100;

BB5_32:
	ret;
}

	// .globl	GammasRGB
.visible .entry GammasRGB(
	.param .u64 GammasRGB_param_0,
	.param .u32 GammasRGB_param_1,
	.param .u32 GammasRGB_param_2,
	.param .u32 GammasRGB_param_3
)
{
	.reg .pred 	%p<61>;
	.reg .f32 	%f<324>;
	.reg .b32 	%r<49>;
	.reg .b64 	%rd<12>;


	ld.param.u64 	%rd1, [GammasRGB_param_0];
	ld.param.u32 	%r4, [GammasRGB_param_1];
	ld.param.u32 	%r5, [GammasRGB_param_2];
	ld.param.u32 	%r3, [GammasRGB_param_3];
	mov.u32 	%r6, %ctaid.x;
	mov.u32 	%r7, %ntid.x;
	mov.u32 	%r8, %tid.x;
	mad.lo.s32 	%r1, %r7, %r6, %r8;
	mov.u32 	%r9, %ntid.y;
	mov.u32 	%r10, %ctaid.y;
	mov.u32 	%r11, %tid.y;
	mad.lo.s32 	%r2, %r9, %r10, %r11;
	setp.ge.s32	%p4, %r2, %r5;
	setp.ge.s32	%p5, %r1, %r4;
	or.pred  	%p6, %p4, %p5;
	@%p6 bra 	BB6_44;

	cvta.to.global.u64 	%rd2, %rd1;
	mul.lo.s32 	%r12, %r2, %r3;
	cvt.s64.s32	%rd3, %r12;
	add.s64 	%rd4, %rd2, %rd3;
	mul.wide.s32 	%rd5, %r1, 12;
	add.s64 	%rd6, %rd4, %rd5;
	ld.global.f32 	%f52, [%rd6];
	ld.global.f32 	%f53, [%rd6+4];
	ld.global.f32 	%f54, [%rd6+8];
	abs.f32 	%f55, %f52;
	setp.gtu.f32	%p7, %f55, 0f7F800000;
	selp.f32	%f56, 0f00000000, %f52, %p7;
	abs.f32 	%f57, %f53;
	setp.gtu.f32	%p8, %f57, 0f7F800000;
	selp.f32	%f58, 0f00000000, %f53, %p8;
	abs.f32 	%f59, %f54;
	setp.gtu.f32	%p9, %f59, 0f7F800000;
	selp.f32	%f60, 0f00000000, %f54, %p9;
	mov.f32 	%f61, 0f3F800000;
	min.f32 	%f62, %f56, %f61;
	mov.f32 	%f63, 0f00000000;
	max.f32 	%f1, %f62, %f63;
	min.f32 	%f64, %f58, %f61;
	max.f32 	%f2, %f64, %f63;
	min.f32 	%f65, %f60, %f61;
	max.f32 	%f3, %f65, %f63;
	setp.gtu.f32	%p10, %f1, 0f3B4D2E1C;
	@%p10 bra 	BB6_3;
	bra.uni 	BB6_2;

BB6_3:
	mov.f32 	%f68, 0f3E555555;
	cvt.rzi.f32.f32	%f69, %f68;
	fma.rn.f32 	%f70, %f69, 0fC0000000, 0f3ED55555;
	abs.f32 	%f5, %f70;
	abs.f32 	%f6, %f1;
	setp.lt.f32	%p11, %f6, 0f00800000;
	mul.f32 	%f71, %f6, 0f4B800000;
	selp.f32	%f72, 0fC3170000, 0fC2FE0000, %p11;
	selp.f32	%f73, %f71, %f6, %p11;
	mov.b32 	 %r13, %f73;
	and.b32  	%r14, %r13, 8388607;
	or.b32  	%r15, %r14, 1065353216;
	mov.b32 	 %f74, %r15;
	shr.u32 	%r16, %r13, 23;
	cvt.rn.f32.u32	%f75, %r16;
	add.f32 	%f76, %f72, %f75;
	setp.gt.f32	%p12, %f74, 0f3FB504F3;
	mul.f32 	%f77, %f74, 0f3F000000;
	add.f32 	%f78, %f76, 0f3F800000;
	selp.f32	%f79, %f77, %f74, %p12;
	selp.f32	%f80, %f78, %f76, %p12;
	add.f32 	%f81, %f79, 0fBF800000;
	add.f32 	%f67, %f79, 0f3F800000;
	// inline asm
	rcp.approx.ftz.f32 %f66,%f67;
	// inline asm
	add.f32 	%f82, %f81, %f81;
	mul.f32 	%f83, %f66, %f82;
	mul.f32 	%f84, %f83, %f83;
	mov.f32 	%f85, 0f3C4CAF63;
	mov.f32 	%f86, 0f3B18F0FE;
	fma.rn.f32 	%f87, %f86, %f84, %f85;
	mov.f32 	%f88, 0f3DAAAABD;
	fma.rn.f32 	%f89, %f87, %f84, %f88;
	mul.rn.f32 	%f90, %f89, %f84;
	mul.rn.f32 	%f91, %f90, %f83;
	sub.f32 	%f92, %f81, %f83;
	neg.f32 	%f93, %f83;
	add.f32 	%f94, %f92, %f92;
	fma.rn.f32 	%f95, %f93, %f81, %f94;
	mul.rn.f32 	%f96, %f66, %f95;
	add.f32 	%f97, %f91, %f83;
	sub.f32 	%f98, %f83, %f97;
	add.f32 	%f99, %f91, %f98;
	add.f32 	%f100, %f96, %f99;
	add.f32 	%f101, %f97, %f100;
	sub.f32 	%f102, %f97, %f101;
	add.f32 	%f103, %f100, %f102;
	mov.f32 	%f104, 0f3F317200;
	mul.rn.f32 	%f105, %f80, %f104;
	mov.f32 	%f106, 0f35BFBE8E;
	mul.rn.f32 	%f107, %f80, %f106;
	add.f32 	%f108, %f105, %f101;
	sub.f32 	%f109, %f105, %f108;
	add.f32 	%f110, %f101, %f109;
	add.f32 	%f111, %f103, %f110;
	add.f32 	%f112, %f107, %f111;
	add.f32 	%f113, %f108, %f112;
	sub.f32 	%f114, %f108, %f113;
	add.f32 	%f115, %f112, %f114;
	mov.f32 	%f116, 0f3ED55555;
	mul.rn.f32 	%f117, %f116, %f113;
	neg.f32 	%f118, %f117;
	fma.rn.f32 	%f119, %f116, %f113, %f118;
	fma.rn.f32 	%f120, %f116, %f115, %f119;
	fma.rn.f32 	%f122, %f63, %f113, %f120;
	add.rn.f32 	%f123, %f117, %f122;
	neg.f32 	%f124, %f123;
	add.rn.f32 	%f125, %f117, %f124;
	add.rn.f32 	%f126, %f125, %f122;
	mov.b32 	 %r17, %f123;
	setp.eq.s32	%p13, %r17, 1118925336;
	add.s32 	%r18, %r17, -1;
	mov.b32 	 %f127, %r18;
	add.f32 	%f128, %f126, 0f37000000;
	selp.f32	%f129, %f127, %f123, %p13;
	selp.f32	%f7, %f128, %f126, %p13;
	mul.f32 	%f130, %f129, 0f3FB8AA3B;
	cvt.rzi.f32.f32	%f131, %f130;
	mov.f32 	%f132, 0fBF317200;
	fma.rn.f32 	%f133, %f131, %f132, %f129;
	mov.f32 	%f134, 0fB5BFBE8E;
	fma.rn.f32 	%f135, %f131, %f134, %f133;
	mul.f32 	%f136, %f135, 0f3FB8AA3B;
	ex2.approx.ftz.f32 	%f137, %f136;
	add.f32 	%f138, %f131, 0f00000000;
	ex2.approx.f32 	%f139, %f138;
	mul.f32 	%f140, %f137, %f139;
	setp.lt.f32	%p14, %f129, 0fC2D20000;
	selp.f32	%f141, 0f00000000, %f140, %p14;
	setp.gt.f32	%p15, %f129, 0f42D20000;
	selp.f32	%f312, 0f7F800000, %f141, %p15;
	setp.eq.f32	%p16, %f312, 0f7F800000;
	@%p16 bra 	BB6_5;

	fma.rn.f32 	%f312, %f312, %f7, %f312;

BB6_5:
	setp.lt.f32	%p17, %f1, 0f00000000;
	setp.eq.f32	%p18, %f5, 0f3F800000;
	and.pred  	%p1, %p17, %p18;
	mov.b32 	 %r19, %f312;
	xor.b32  	%r20, %r19, -2147483648;
	mov.b32 	 %f142, %r20;
	selp.f32	%f314, %f142, %f312, %p1;
	setp.eq.f32	%p19, %f1, 0f00000000;
	@%p19 bra 	BB6_8;
	bra.uni 	BB6_6;

BB6_8:
	add.f32 	%f145, %f1, %f1;
	selp.f32	%f314, %f145, 0f00000000, %p18;
	bra.uni 	BB6_9;

BB6_2:
	mul.f32 	%f315, %f1, 0f414EB852;
	bra.uni 	BB6_15;

BB6_6:
	setp.geu.f32	%p20, %f1, 0f00000000;
	@%p20 bra 	BB6_9;

	cvt.rzi.f32.f32	%f144, %f116;
	setp.neu.f32	%p21, %f144, 0f3ED55555;
	selp.f32	%f314, 0f7FFFFFFF, %f314, %p21;

BB6_9:
	add.f32 	%f146, %f6, 0f3ED55555;
	mov.b32 	 %r21, %f146;
	setp.lt.s32	%p23, %r21, 2139095040;
	@%p23 bra 	BB6_14;

	setp.gtu.f32	%p24, %f6, 0f7F800000;
	@%p24 bra 	BB6_13;
	bra.uni 	BB6_11;

BB6_13:
	add.f32 	%f314, %f1, 0f3ED55555;
	bra.uni 	BB6_14;

BB6_11:
	setp.neu.f32	%p25, %f6, 0f7F800000;
	@%p25 bra 	BB6_14;

	selp.f32	%f314, 0fFF800000, 0f7F800000, %p1;

BB6_14:
	fma.rn.f32 	%f147, %f314, 0f3F870A3D, 0fBD6147AE;
	setp.eq.f32	%p26, %f1, 0f3F800000;
	selp.f32	%f315, 0f3F7FFFFF, %f147, %p26;

BB6_15:
	setp.gtu.f32	%p27, %f2, 0f3B4D2E1C;
	@%p27 bra 	BB6_17;
	bra.uni 	BB6_16;

BB6_17:
	mov.f32 	%f150, 0f3E555555;
	cvt.rzi.f32.f32	%f151, %f150;
	fma.rn.f32 	%f152, %f151, 0fC0000000, 0f3ED55555;
	abs.f32 	%f21, %f152;
	abs.f32 	%f22, %f2;
	setp.lt.f32	%p28, %f22, 0f00800000;
	mul.f32 	%f153, %f22, 0f4B800000;
	selp.f32	%f154, 0fC3170000, 0fC2FE0000, %p28;
	selp.f32	%f155, %f153, %f22, %p28;
	mov.b32 	 %r22, %f155;
	and.b32  	%r23, %r22, 8388607;
	or.b32  	%r24, %r23, 1065353216;
	mov.b32 	 %f156, %r24;
	shr.u32 	%r25, %r22, 23;
	cvt.rn.f32.u32	%f157, %r25;
	add.f32 	%f158, %f154, %f157;
	setp.gt.f32	%p29, %f156, 0f3FB504F3;
	mul.f32 	%f159, %f156, 0f3F000000;
	add.f32 	%f160, %f158, 0f3F800000;
	selp.f32	%f161, %f159, %f156, %p29;
	selp.f32	%f162, %f160, %f158, %p29;
	add.f32 	%f163, %f161, 0fBF800000;
	add.f32 	%f149, %f161, 0f3F800000;
	// inline asm
	rcp.approx.ftz.f32 %f148,%f149;
	// inline asm
	add.f32 	%f164, %f163, %f163;
	mul.f32 	%f165, %f148, %f164;
	mul.f32 	%f166, %f165, %f165;
	mov.f32 	%f167, 0f3C4CAF63;
	mov.f32 	%f168, 0f3B18F0FE;
	fma.rn.f32 	%f169, %f168, %f166, %f167;
	mov.f32 	%f170, 0f3DAAAABD;
	fma.rn.f32 	%f171, %f169, %f166, %f170;
	mul.rn.f32 	%f172, %f171, %f166;
	mul.rn.f32 	%f173, %f172, %f165;
	sub.f32 	%f174, %f163, %f165;
	neg.f32 	%f175, %f165;
	add.f32 	%f176, %f174, %f174;
	fma.rn.f32 	%f177, %f175, %f163, %f176;
	mul.rn.f32 	%f178, %f148, %f177;
	add.f32 	%f179, %f173, %f165;
	sub.f32 	%f180, %f165, %f179;
	add.f32 	%f181, %f173, %f180;
	add.f32 	%f182, %f178, %f181;
	add.f32 	%f183, %f179, %f182;
	sub.f32 	%f184, %f179, %f183;
	add.f32 	%f185, %f182, %f184;
	mov.f32 	%f186, 0f3F317200;
	mul.rn.f32 	%f187, %f162, %f186;
	mov.f32 	%f188, 0f35BFBE8E;
	mul.rn.f32 	%f189, %f162, %f188;
	add.f32 	%f190, %f187, %f183;
	sub.f32 	%f191, %f187, %f190;
	add.f32 	%f192, %f183, %f191;
	add.f32 	%f193, %f185, %f192;
	add.f32 	%f194, %f189, %f193;
	add.f32 	%f195, %f190, %f194;
	sub.f32 	%f196, %f190, %f195;
	add.f32 	%f197, %f194, %f196;
	mov.f32 	%f198, 0f3ED55555;
	mul.rn.f32 	%f199, %f198, %f195;
	neg.f32 	%f200, %f199;
	fma.rn.f32 	%f201, %f198, %f195, %f200;
	fma.rn.f32 	%f202, %f198, %f197, %f201;
	fma.rn.f32 	%f204, %f63, %f195, %f202;
	add.rn.f32 	%f205, %f199, %f204;
	neg.f32 	%f206, %f205;
	add.rn.f32 	%f207, %f199, %f206;
	add.rn.f32 	%f208, %f207, %f204;
	mov.b32 	 %r26, %f205;
	setp.eq.s32	%p30, %r26, 1118925336;
	add.s32 	%r27, %r26, -1;
	mov.b32 	 %f209, %r27;
	add.f32 	%f210, %f208, 0f37000000;
	selp.f32	%f211, %f209, %f205, %p30;
	selp.f32	%f23, %f210, %f208, %p30;
	mul.f32 	%f212, %f211, 0f3FB8AA3B;
	cvt.rzi.f32.f32	%f213, %f212;
	mov.f32 	%f214, 0fBF317200;
	fma.rn.f32 	%f215, %f213, %f214, %f211;
	mov.f32 	%f216, 0fB5BFBE8E;
	fma.rn.f32 	%f217, %f213, %f216, %f215;
	mul.f32 	%f218, %f217, 0f3FB8AA3B;
	ex2.approx.ftz.f32 	%f219, %f218;
	add.f32 	%f220, %f213, 0f00000000;
	ex2.approx.f32 	%f221, %f220;
	mul.f32 	%f222, %f219, %f221;
	setp.lt.f32	%p31, %f211, 0fC2D20000;
	selp.f32	%f223, 0f00000000, %f222, %p31;
	setp.gt.f32	%p32, %f211, 0f42D20000;
	selp.f32	%f316, 0f7F800000, %f223, %p32;
	setp.eq.f32	%p33, %f316, 0f7F800000;
	@%p33 bra 	BB6_19;

	fma.rn.f32 	%f316, %f316, %f23, %f316;

BB6_19:
	setp.lt.f32	%p34, %f2, 0f00000000;
	setp.eq.f32	%p35, %f21, 0f3F800000;
	and.pred  	%p2, %p34, %p35;
	mov.b32 	 %r28, %f316;
	xor.b32  	%r29, %r28, -2147483648;
	mov.b32 	 %f224, %r29;
	selp.f32	%f318, %f224, %f316, %p2;
	setp.eq.f32	%p36, %f2, 0f00000000;
	@%p36 bra 	BB6_22;
	bra.uni 	BB6_20;

BB6_22:
	add.f32 	%f227, %f2, %f2;
	selp.f32	%f318, %f227, 0f00000000, %p35;
	bra.uni 	BB6_23;

BB6_16:
	mul.f32 	%f319, %f2, 0f414EB852;
	bra.uni 	BB6_29;

BB6_20:
	setp.geu.f32	%p37, %f2, 0f00000000;
	@%p37 bra 	BB6_23;

	cvt.rzi.f32.f32	%f226, %f198;
	setp.neu.f32	%p38, %f226, 0f3ED55555;
	selp.f32	%f318, 0f7FFFFFFF, %f318, %p38;

BB6_23:
	add.f32 	%f228, %f22, 0f3ED55555;
	mov.b32 	 %r30, %f228;
	setp.lt.s32	%p40, %r30, 2139095040;
	@%p40 bra 	BB6_28;

	setp.gtu.f32	%p41, %f22, 0f7F800000;
	@%p41 bra 	BB6_27;
	bra.uni 	BB6_25;

BB6_27:
	add.f32 	%f318, %f2, 0f3ED55555;
	bra.uni 	BB6_28;

BB6_25:
	setp.neu.f32	%p42, %f22, 0f7F800000;
	@%p42 bra 	BB6_28;

	selp.f32	%f318, 0fFF800000, 0f7F800000, %p2;

BB6_28:
	fma.rn.f32 	%f229, %f318, 0f3F870A3D, 0fBD6147AE;
	setp.eq.f32	%p43, %f2, 0f3F800000;
	selp.f32	%f319, 0f3F7FFFFF, %f229, %p43;

BB6_29:
	setp.gtu.f32	%p44, %f3, 0f3B4D2E1C;
	@%p44 bra 	BB6_31;
	bra.uni 	BB6_30;

BB6_31:
	mov.f32 	%f232, 0f3E555555;
	cvt.rzi.f32.f32	%f233, %f232;
	fma.rn.f32 	%f234, %f233, 0fC0000000, 0f3ED55555;
	abs.f32 	%f37, %f234;
	abs.f32 	%f38, %f3;
	setp.lt.f32	%p45, %f38, 0f00800000;
	mul.f32 	%f235, %f38, 0f4B800000;
	selp.f32	%f236, 0fC3170000, 0fC2FE0000, %p45;
	selp.f32	%f237, %f235, %f38, %p45;
	mov.b32 	 %r31, %f237;
	and.b32  	%r32, %r31, 8388607;
	or.b32  	%r33, %r32, 1065353216;
	mov.b32 	 %f238, %r33;
	shr.u32 	%r34, %r31, 23;
	cvt.rn.f32.u32	%f239, %r34;
	add.f32 	%f240, %f236, %f239;
	setp.gt.f32	%p46, %f238, 0f3FB504F3;
	mul.f32 	%f241, %f238, 0f3F000000;
	add.f32 	%f242, %f240, 0f3F800000;
	selp.f32	%f243, %f241, %f238, %p46;
	selp.f32	%f244, %f242, %f240, %p46;
	add.f32 	%f245, %f243, 0fBF800000;
	add.f32 	%f231, %f243, 0f3F800000;
	// inline asm
	rcp.approx.ftz.f32 %f230,%f231;
	// inline asm
	add.f32 	%f246, %f245, %f245;
	mul.f32 	%f247, %f230, %f246;
	mul.f32 	%f248, %f247, %f247;
	mov.f32 	%f249, 0f3C4CAF63;
	mov.f32 	%f250, 0f3B18F0FE;
	fma.rn.f32 	%f251, %f250, %f248, %f249;
	mov.f32 	%f252, 0f3DAAAABD;
	fma.rn.f32 	%f253, %f251, %f248, %f252;
	mul.rn.f32 	%f254, %f253, %f248;
	mul.rn.f32 	%f255, %f254, %f247;
	sub.f32 	%f256, %f245, %f247;
	neg.f32 	%f257, %f247;
	add.f32 	%f258, %f256, %f256;
	fma.rn.f32 	%f259, %f257, %f245, %f258;
	mul.rn.f32 	%f260, %f230, %f259;
	add.f32 	%f261, %f255, %f247;
	sub.f32 	%f262, %f247, %f261;
	add.f32 	%f263, %f255, %f262;
	add.f32 	%f264, %f260, %f263;
	add.f32 	%f265, %f261, %f264;
	sub.f32 	%f266, %f261, %f265;
	add.f32 	%f267, %f264, %f266;
	mov.f32 	%f268, 0f3F317200;
	mul.rn.f32 	%f269, %f244, %f268;
	mov.f32 	%f270, 0f35BFBE8E;
	mul.rn.f32 	%f271, %f244, %f270;
	add.f32 	%f272, %f269, %f265;
	sub.f32 	%f273, %f269, %f272;
	add.f32 	%f274, %f265, %f273;
	add.f32 	%f275, %f267, %f274;
	add.f32 	%f276, %f271, %f275;
	add.f32 	%f277, %f272, %f276;
	sub.f32 	%f278, %f272, %f277;
	add.f32 	%f279, %f276, %f278;
	mov.f32 	%f280, 0f3ED55555;
	mul.rn.f32 	%f281, %f280, %f277;
	neg.f32 	%f282, %f281;
	fma.rn.f32 	%f283, %f280, %f277, %f282;
	fma.rn.f32 	%f284, %f280, %f279, %f283;
	fma.rn.f32 	%f286, %f63, %f277, %f284;
	add.rn.f32 	%f287, %f281, %f286;
	neg.f32 	%f288, %f287;
	add.rn.f32 	%f289, %f281, %f288;
	add.rn.f32 	%f290, %f289, %f286;
	mov.b32 	 %r35, %f287;
	setp.eq.s32	%p47, %r35, 1118925336;
	add.s32 	%r36, %r35, -1;
	mov.b32 	 %f291, %r36;
	add.f32 	%f292, %f290, 0f37000000;
	selp.f32	%f293, %f291, %f287, %p47;
	selp.f32	%f39, %f292, %f290, %p47;
	mul.f32 	%f294, %f293, 0f3FB8AA3B;
	cvt.rzi.f32.f32	%f295, %f294;
	mov.f32 	%f296, 0fBF317200;
	fma.rn.f32 	%f297, %f295, %f296, %f293;
	mov.f32 	%f298, 0fB5BFBE8E;
	fma.rn.f32 	%f299, %f295, %f298, %f297;
	mul.f32 	%f300, %f299, 0f3FB8AA3B;
	ex2.approx.ftz.f32 	%f301, %f300;
	add.f32 	%f302, %f295, 0f00000000;
	ex2.approx.f32 	%f303, %f302;
	mul.f32 	%f304, %f301, %f303;
	setp.lt.f32	%p48, %f293, 0fC2D20000;
	selp.f32	%f305, 0f00000000, %f304, %p48;
	setp.gt.f32	%p49, %f293, 0f42D20000;
	selp.f32	%f320, 0f7F800000, %f305, %p49;
	setp.eq.f32	%p50, %f320, 0f7F800000;
	@%p50 bra 	BB6_33;

	fma.rn.f32 	%f320, %f320, %f39, %f320;

BB6_33:
	setp.lt.f32	%p51, %f3, 0f00000000;
	setp.eq.f32	%p52, %f37, 0f3F800000;
	and.pred  	%p3, %p51, %p52;
	mov.b32 	 %r37, %f320;
	xor.b32  	%r38, %r37, -2147483648;
	mov.b32 	 %f306, %r38;
	selp.f32	%f322, %f306, %f320, %p3;
	setp.eq.f32	%p53, %f3, 0f00000000;
	@%p53 bra 	BB6_36;
	bra.uni 	BB6_34;

BB6_36:
	add.f32 	%f309, %f3, %f3;
	selp.f32	%f322, %f309, 0f00000000, %p52;
	bra.uni 	BB6_37;

BB6_30:
	mul.f32 	%f323, %f3, 0f414EB852;
	bra.uni 	BB6_43;

BB6_34:
	setp.geu.f32	%p54, %f3, 0f00000000;
	@%p54 bra 	BB6_37;

	cvt.rzi.f32.f32	%f308, %f280;
	setp.neu.f32	%p55, %f308, 0f3ED55555;
	selp.f32	%f322, 0f7FFFFFFF, %f322, %p55;

BB6_37:
	add.f32 	%f310, %f38, 0f3ED55555;
	mov.b32 	 %r39, %f310;
	setp.lt.s32	%p57, %r39, 2139095040;
	@%p57 bra 	BB6_42;

	setp.gtu.f32	%p58, %f38, 0f7F800000;
	@%p58 bra 	BB6_41;
	bra.uni 	BB6_39;

BB6_41:
	add.f32 	%f322, %f3, 0f3ED55555;
	bra.uni 	BB6_42;

BB6_39:
	setp.neu.f32	%p59, %f38, 0f7F800000;
	@%p59 bra 	BB6_42;

	selp.f32	%f322, 0fFF800000, 0f7F800000, %p3;

BB6_42:
	fma.rn.f32 	%f311, %f322, 0f3F870A3D, 0fBD6147AE;
	setp.eq.f32	%p60, %f3, 0f3F800000;
	selp.f32	%f323, 0f3F7FFFFF, %f311, %p60;

BB6_43:
	st.global.f32 	[%rd6], %f315;
	st.global.f32 	[%rd6+4], %f319;
	st.global.f32 	[%rd6+8], %f323;

BB6_44:
	ret;
}

	// .globl	ApplyWeighting
.visible .entry ApplyWeighting(
	.param .u64 ApplyWeighting_param_0,
	.param .u64 ApplyWeighting_param_1,
	.param .u64 ApplyWeighting_param_2,
	.param .u32 ApplyWeighting_param_3,
	.param .u32 ApplyWeighting_param_4,
	.param .u32 ApplyWeighting_param_5,
	.param .f32 ApplyWeighting_param_6
)
{
	.reg .pred 	%p<10>;
	.reg .f32 	%f<39>;
	.reg .b32 	%r<13>;
	.reg .b64 	%rd<15>;


	ld.param.u64 	%rd2, [ApplyWeighting_param_0];
	ld.param.u64 	%rd3, [ApplyWeighting_param_1];
	ld.param.u64 	%rd4, [ApplyWeighting_param_2];
	ld.param.u32 	%r4, [ApplyWeighting_param_3];
	ld.param.u32 	%r5, [ApplyWeighting_param_4];
	ld.param.u32 	%r3, [ApplyWeighting_param_5];
	ld.param.f32 	%f25, [ApplyWeighting_param_6];
	mov.u32 	%r6, %ctaid.x;
	mov.u32 	%r7, %ntid.x;
	mov.u32 	%r8, %tid.x;
	mad.lo.s32 	%r1, %r7, %r6, %r8;
	mov.u32 	%r9, %ntid.y;
	mov.u32 	%r10, %ctaid.y;
	mov.u32 	%r11, %tid.y;
	mad.lo.s32 	%r2, %r9, %r10, %r11;
	setp.ge.s32	%p2, %r2, %r5;
	setp.ge.s32	%p3, %r1, %r4;
	or.pred  	%p4, %p2, %p3;
	@%p4 bra 	BB7_10;

	cvta.to.global.u64 	%rd5, %rd2;
	mul.lo.s32 	%r12, %r2, %r3;
	cvt.s64.s32	%rd6, %r12;
	add.s64 	%rd7, %rd5, %rd6;
	mul.wide.s32 	%rd8, %r1, 12;
	add.s64 	%rd1, %rd7, %rd8;
	ld.global.f32 	%f1, [%rd1];
	ld.global.f32 	%f2, [%rd1+4];
	ld.global.f32 	%f3, [%rd1+8];
	cvta.to.global.u64 	%rd9, %rd3;
	add.s64 	%rd10, %rd9, %rd6;
	add.s64 	%rd11, %rd10, %rd8;
	ld.global.f32 	%f34, [%rd11];
	ld.global.f32 	%f5, [%rd11+4];
	ld.global.f32 	%f6, [%rd11+8];
	cvta.to.global.u64 	%rd12, %rd4;
	add.s64 	%rd13, %rd12, %rd6;
	add.s64 	%rd14, %rd13, %rd8;
	ld.global.f32 	%f35, [%rd14];
	ld.global.f32 	%f9, [%rd14+4];
	ld.global.f32 	%f10, [%rd14+8];
	setp.geu.f32	%p5, %f35, %f25;
	@%p5 bra 	BB7_3;

	add.f32 	%f34, %f1, %f34;
	add.f32 	%f35, %f35, 0f3F800000;

BB7_3:
	mov.f32 	%f38, 0f00000000;
	setp.eq.f32	%p6, %f35, 0f00000000;
	mov.f32 	%f36, %f38;
	@%p6 bra 	BB7_5;

	div.rn.f32 	%f36, %f34, %f35;

BB7_5:
	setp.lt.f32	%p1, %f9, %f25;
	add.f32 	%f28, %f9, 0f3F800000;
	selp.f32	%f18, %f28, %f9, %p1;
	setp.eq.f32	%p7, %f18, 0f00000000;
	mov.f32 	%f37, %f38;
	@%p7 bra 	BB7_7;

	add.f32 	%f29, %f2, %f5;
	selp.f32	%f30, %f29, %f5, %p1;
	div.rn.f32 	%f37, %f30, %f18;

BB7_7:
	add.f32 	%f32, %f3, %f6;
	setp.lt.f32	%p8, %f10, %f25;
	selp.f32	%f21, %f32, %f6, %p8;
	add.f32 	%f33, %f10, 0f3F800000;
	selp.f32	%f22, %f33, %f10, %p8;
	setp.eq.f32	%p9, %f22, 0f00000000;
	@%p9 bra 	BB7_9;

	div.rn.f32 	%f38, %f21, %f22;

BB7_9:
	st.global.f32 	[%rd1], %f36;
	st.global.f32 	[%rd1+4], %f37;
	st.global.f32 	[%rd1+8], %f38;

BB7_10:
	ret;
}

	// .globl	conjugateComplexMulKernel
.visible .entry conjugateComplexMulKernel(
	.param .u64 conjugateComplexMulKernel_param_0,
	.param .u64 conjugateComplexMulKernel_param_1,
	.param .u32 conjugateComplexMulKernel_param_2
)
{
	.reg .pred 	%p<2>;
	.reg .f32 	%f<14>;
	.reg .b32 	%r<6>;
	.reg .b64 	%rd<8>;


	ld.param.u64 	%rd1, [conjugateComplexMulKernel_param_0];
	ld.param.u64 	%rd2, [conjugateComplexMulKernel_param_1];
	ld.param.u32 	%r2, [conjugateComplexMulKernel_param_2];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ntid.x;
	mov.u32 	%r5, %tid.x;
	mad.lo.s32 	%r1, %r4, %r3, %r5;
	setp.ge.s32	%p1, %r1, %r2;
	@%p1 bra 	BB8_2;

	cvta.to.global.u64 	%rd3, %rd2;
	cvta.to.global.u64 	%rd4, %rd1;
	mul.wide.s32 	%rd5, %r1, 8;
	add.s64 	%rd6, %rd4, %rd5;
	ld.global.v2.f32 	{%f1, %f2}, [%rd6];
	add.s64 	%rd7, %rd3, %rd5;
	ld.global.v2.f32 	{%f5, %f6}, [%rd7];
	mul.f32 	%f9, %f6, %f2;
	mul.f32 	%f10, %f1, %f6;
	mul.f32 	%f11, %f5, %f2;
	sub.f32 	%f12, %f10, %f11;
	fma.rn.f32 	%f13, %f1, %f5, %f9;
	st.global.v2.f32 	[%rd7], {%f13, %f12};

BB8_2:
	ret;
}

	// .globl	findMinimum
.visible .entry findMinimum(
	.param .u64 findMinimum_param_0,
	.param .u64 findMinimum_param_1,
	.param .u32 findMinimum_param_2,
	.param .u32 findMinimum_param_3,
	.param .u32 findMinimum_param_4,
	.param .u32 findMinimum_param_5,
	.param .f32 findMinimum_param_6
)
{
	.reg .pred 	%p<26>;
	.reg .f32 	%f<201>;
	.reg .b32 	%r<78>;
	.reg .b64 	%rd<27>;


	ld.param.u64 	%rd6, [findMinimum_param_0];
	ld.param.u64 	%rd5, [findMinimum_param_1];
	ld.param.u32 	%r24, [findMinimum_param_2];
	ld.param.u32 	%r25, [findMinimum_param_3];
	ld.param.u32 	%r27, [findMinimum_param_4];
	ld.param.u32 	%r26, [findMinimum_param_5];
	ld.param.f32 	%f37, [findMinimum_param_6];
	cvta.to.global.u64 	%rd1, %rd6;
	mov.u32 	%r28, %ntid.x;
	mov.u32 	%r29, %ctaid.x;
	mov.u32 	%r30, %tid.x;
	mad.lo.s32 	%r1, %r28, %r29, %r30;
	setp.ge.s32	%p1, %r1, %r27;
	@%p1 bra 	BB9_18;

	shl.b32 	%r2, %r25, 1;
	mov.u32 	%r39, 1;
	add.s32 	%r3, %r2, 1;
	mul.lo.s32 	%r4, %r3, %r3;
	mul.lo.s32 	%r5, %r1, %r4;
	max.s32 	%r6, %r4, %r39;
	and.b32  	%r38, %r6, 3;
	mov.u32 	%r69, 0;
	mov.u32 	%r68, -1;
	mov.f32 	%f186, 0fFF7FFFFF;
	mov.f32 	%f185, 0f7F7FFFFF;
	mov.f32 	%f195, 0f00000000;
	setp.eq.s32	%p2, %r38, 0;
	@%p2 bra 	BB9_2;

	setp.eq.s32	%p3, %r38, 1;
	@%p3 bra 	BB9_7;

	setp.eq.s32	%p4, %r38, 2;
	@%p4 bra 	BB9_6;

	mul.wide.s32 	%rd7, %r5, 4;
	add.s64 	%rd8, %rd1, %rd7;
	ld.global.f32 	%f46, [%rd8];
	mov.f32 	%f47, 0fFF7FFFFF;
	max.f32 	%f186, %f47, %f46;
	setp.lt.f32	%p5, %f46, 0f7F7FFFFF;
	setp.geu.f32	%p6, %f46, 0f7F7FFFFF;
	selp.b32	%r68, -1, 0, %p6;
	selp.f32	%f185, %f46, 0f7F7FFFFF, %p5;
	mov.u32 	%r69, %r39;

BB9_6:
	add.s32 	%r41, %r69, %r5;
	mul.wide.s32 	%rd9, %r41, 4;
	add.s64 	%rd10, %rd1, %rd9;
	ld.global.f32 	%f48, [%rd10];
	max.f32 	%f186, %f186, %f48;
	setp.lt.f32	%p7, %f48, %f185;
	selp.b32	%r68, %r69, %r68, %p7;
	selp.f32	%f185, %f48, %f185, %p7;
	add.s32 	%r69, %r69, 1;

BB9_7:
	add.s32 	%r42, %r69, %r5;
	mul.wide.s32 	%rd11, %r42, 4;
	add.s64 	%rd12, %rd1, %rd11;
	ld.global.f32 	%f49, [%rd12];
	max.f32 	%f186, %f186, %f49;
	setp.lt.f32	%p8, %f49, %f185;
	selp.b32	%r68, %r69, %r68, %p8;
	selp.f32	%f185, %f49, %f185, %p8;
	add.s32 	%r69, %r69, 1;
	mov.f32 	%f195, %f185;
	mov.u32 	%r77, %r68;
	mov.f32 	%f196, %f186;
	bra.uni 	BB9_8;

BB9_2:
	mov.u32 	%r77, %r69;
	mov.f32 	%f196, %f195;

BB9_8:
	setp.lt.u32	%p9, %r6, 4;
	@%p9 bra 	BB9_11;

	mad.lo.s32 	%r47, %r4, %r1, %r69;
	mul.wide.s32 	%rd13, %r47, 4;
	add.s64 	%rd26, %rd1, %rd13;
	mov.f32 	%f195, %f185;
	mov.f32 	%f196, %f186;
	mov.u32 	%r77, %r68;

BB9_10:
	ld.global.f32 	%f50, [%rd26];
	max.f32 	%f51, %f196, %f50;
	setp.lt.f32	%p10, %f50, %f195;
	selp.b32	%r48, %r69, %r77, %p10;
	selp.f32	%f52, %f50, %f195, %p10;
	ld.global.f32 	%f53, [%rd26+4];
	max.f32 	%f54, %f51, %f53;
	setp.lt.f32	%p11, %f53, %f52;
	add.s32 	%r49, %r69, 1;
	selp.b32	%r50, %r49, %r48, %p11;
	selp.f32	%f55, %f53, %f52, %p11;
	ld.global.f32 	%f56, [%rd26+8];
	max.f32 	%f57, %f54, %f56;
	setp.lt.f32	%p12, %f56, %f55;
	add.s32 	%r51, %r69, 2;
	selp.b32	%r52, %r51, %r50, %p12;
	selp.f32	%f58, %f56, %f55, %p12;
	ld.global.f32 	%f59, [%rd26+12];
	max.f32 	%f196, %f57, %f59;
	setp.lt.f32	%p13, %f59, %f58;
	add.s32 	%r53, %r69, 3;
	selp.b32	%r77, %r53, %r52, %p13;
	selp.f32	%f195, %f59, %f58, %p13;
	add.s64 	%rd26, %rd26, 16;
	add.s32 	%r69, %r69, 4;
	setp.lt.s32	%p14, %r69, %r4;
	@%p14 bra 	BB9_10;

BB9_11:
	div.s32 	%r54, %r77, %r3;
	cvt.rn.f32.s32	%f197, %r54;
	cvt.rn.f32.s32	%f62, %r3;
	mul.f32 	%f63, %f62, %f197;
	cvt.rn.f32.s32	%f64, %r77;
	sub.f32 	%f198, %f64, %f63;
	setp.lt.f32	%p15, %f198, 0f3F800000;
	setp.lt.f32	%p16, %f197, 0f3F800000;
	or.pred  	%p17, %p15, %p16;
	mov.f32 	%f199, 0f00000000;
	@%p17 bra 	BB9_12;
	bra.uni 	BB9_13;

BB9_12:
	mov.f32 	%f200, %f199;
	bra.uni 	BB9_17;

BB9_13:
	cvt.rn.f32.s32	%f67, %r2;
	setp.ge.f32	%p18, %f198, %f67;
	setp.ge.f32	%p19, %f197, %f67;
	or.pred  	%p20, %p18, %p19;
	mov.f32 	%f200, %f199;
	@%p20 bra 	BB9_17;

	mov.u32 	%r55, -2;
	sub.s32 	%r56, %r55, %r2;
	add.s32 	%r57, %r56, %r5;
	add.s32 	%r58, %r57, %r77;
	mul.wide.s32 	%rd14, %r58, 4;
	add.s64 	%rd15, %rd1, %rd14;
	ld.const.f32 	%f68, [FA11];
	ld.global.f32 	%f69, [%rd15];
	fma.rn.f32 	%f70, %f69, %f68, 0f00000000;
	ld.const.f32 	%f71, [FA22];
	fma.rn.f32 	%f72, %f69, %f71, 0f00000000;
	ld.const.f32 	%f73, [FA12];
	fma.rn.f32 	%f74, %f69, %f73, 0f00000000;
	ld.const.f32 	%f75, [Fb1];
	fma.rn.f32 	%f76, %f69, %f75, 0f00000000;
	ld.const.f32 	%f77, [Fb2];
	fma.rn.f32 	%f78, %f69, %f77, 0f00000000;
	ld.const.f32 	%f79, [FA11+4];
	ld.global.f32 	%f80, [%rd15+4];
	fma.rn.f32 	%f81, %f80, %f79, %f70;
	ld.const.f32 	%f82, [FA22+4];
	fma.rn.f32 	%f83, %f80, %f82, %f72;
	ld.const.f32 	%f84, [FA12+4];
	fma.rn.f32 	%f85, %f80, %f84, %f74;
	ld.const.f32 	%f86, [Fb1+4];
	fma.rn.f32 	%f87, %f80, %f86, %f76;
	ld.const.f32 	%f88, [Fb2+4];
	fma.rn.f32 	%f89, %f80, %f88, %f78;
	add.s64 	%rd16, %rd15, 8;
	ld.const.f32 	%f90, [FA11+8];
	ld.global.f32 	%f91, [%rd15+8];
	fma.rn.f32 	%f92, %f91, %f90, %f81;
	ld.const.f32 	%f93, [FA22+8];
	fma.rn.f32 	%f94, %f91, %f93, %f83;
	ld.const.f32 	%f95, [FA12+8];
	fma.rn.f32 	%f96, %f91, %f95, %f85;
	ld.const.f32 	%f97, [Fb1+8];
	fma.rn.f32 	%f98, %f91, %f97, %f87;
	ld.const.f32 	%f99, [Fb2+8];
	fma.rn.f32 	%f100, %f91, %f99, %f89;
	shl.b32 	%r59, %r25, 3;
	cvt.s64.s32	%rd17, %r59;
	add.s64 	%rd18, %rd16, %rd17;
	add.s64 	%rd19, %rd15, %rd17;
	ld.const.f32 	%f101, [FA11+12];
	ld.global.f32 	%f102, [%rd19+4];
	fma.rn.f32 	%f103, %f102, %f101, %f92;
	ld.const.f32 	%f104, [FA22+12];
	fma.rn.f32 	%f105, %f102, %f104, %f94;
	ld.const.f32 	%f106, [FA12+12];
	fma.rn.f32 	%f107, %f102, %f106, %f96;
	ld.const.f32 	%f108, [Fb1+12];
	fma.rn.f32 	%f109, %f102, %f108, %f98;
	ld.const.f32 	%f110, [Fb2+12];
	fma.rn.f32 	%f111, %f102, %f110, %f100;
	ld.const.f32 	%f112, [FA11+16];
	ld.global.f32 	%f113, [%rd19+8];
	fma.rn.f32 	%f114, %f113, %f112, %f103;
	ld.const.f32 	%f115, [FA22+16];
	fma.rn.f32 	%f116, %f113, %f115, %f105;
	ld.const.f32 	%f117, [FA12+16];
	fma.rn.f32 	%f118, %f113, %f117, %f107;
	ld.const.f32 	%f119, [Fb1+16];
	fma.rn.f32 	%f120, %f113, %f119, %f109;
	ld.const.f32 	%f121, [Fb2+16];
	fma.rn.f32 	%f122, %f113, %f121, %f111;
	ld.const.f32 	%f123, [FA11+20];
	ld.global.f32 	%f124, [%rd19+12];
	fma.rn.f32 	%f125, %f124, %f123, %f114;
	ld.const.f32 	%f126, [FA22+20];
	fma.rn.f32 	%f127, %f124, %f126, %f116;
	ld.const.f32 	%f128, [FA12+20];
	fma.rn.f32 	%f129, %f124, %f128, %f118;
	ld.const.f32 	%f130, [Fb1+20];
	fma.rn.f32 	%f131, %f124, %f130, %f120;
	ld.const.f32 	%f132, [Fb2+20];
	fma.rn.f32 	%f133, %f124, %f132, %f122;
	add.s64 	%rd20, %rd18, %rd17;
	ld.const.f32 	%f134, [FA11+24];
	ld.global.f32 	%f135, [%rd20];
	fma.rn.f32 	%f136, %f135, %f134, %f125;
	ld.const.f32 	%f137, [FA22+24];
	fma.rn.f32 	%f138, %f135, %f137, %f127;
	ld.const.f32 	%f139, [FA12+24];
	fma.rn.f32 	%f140, %f135, %f139, %f129;
	ld.const.f32 	%f141, [Fb1+24];
	fma.rn.f32 	%f142, %f135, %f141, %f131;
	ld.const.f32 	%f143, [Fb2+24];
	fma.rn.f32 	%f144, %f135, %f143, %f133;
	ld.const.f32 	%f145, [FA11+28];
	ld.global.f32 	%f146, [%rd20+4];
	fma.rn.f32 	%f147, %f146, %f145, %f136;
	ld.const.f32 	%f148, [FA22+28];
	fma.rn.f32 	%f149, %f146, %f148, %f138;
	ld.const.f32 	%f150, [FA12+28];
	fma.rn.f32 	%f151, %f146, %f150, %f140;
	ld.const.f32 	%f152, [Fb1+28];
	fma.rn.f32 	%f153, %f146, %f152, %f142;
	ld.const.f32 	%f154, [Fb2+28];
	fma.rn.f32 	%f155, %f146, %f154, %f144;
	ld.const.f32 	%f156, [FA11+32];
	ld.global.f32 	%f157, [%rd20+8];
	fma.rn.f32 	%f158, %f157, %f156, %f147;
	ld.const.f32 	%f159, [FA22+32];
	fma.rn.f32 	%f160, %f157, %f159, %f149;
	ld.const.f32 	%f161, [FA12+32];
	fma.rn.f32 	%f162, %f157, %f161, %f151;
	ld.const.f32 	%f163, [Fb1+32];
	fma.rn.f32 	%f23, %f157, %f163, %f153;
	ld.const.f32 	%f164, [Fb2+32];
	fma.rn.f32 	%f24, %f157, %f164, %f155;
	mov.f32 	%f165, 0f00000000;
	max.f32 	%f25, %f158, %f165;
	max.f32 	%f26, %f160, %f165;
	mul.f32 	%f166, %f25, %f26;
	mul.f32 	%f167, %f162, %f162;
	sub.f32 	%f168, %f166, %f167;
	setp.lt.f32	%p21, %f168, 0f00000000;
	selp.f32	%f27, 0f00000000, %f162, %p21;
	selp.f32	%f28, %f166, %f168, %p21;
	setp.eq.f32	%p22, %f28, 0f00000000;
	@%p22 bra 	BB9_16;

	mul.f32 	%f169, %f23, %f26;
	mul.f32 	%f170, %f24, %f27;
	sub.f32 	%f171, %f169, %f170;
	div.rn.f32 	%f172, %f171, %f28;
	mul.f32 	%f173, %f23, %f27;
	mul.f32 	%f174, %f24, %f25;
	sub.f32 	%f175, %f174, %f173;
	div.rn.f32 	%f176, %f175, %f28;
	abs.f32 	%f177, %f172;
	setp.gt.f32	%p23, %f177, 0f3F800000;
	selp.f32	%f178, 0f00000000, %f172, %p23;
	abs.f32 	%f179, %f176;
	setp.gt.f32	%p24, %f179, 0f3F800000;
	selp.f32	%f180, 0f00000000, %f176, %p24;
	sub.f32 	%f198, %f198, %f178;
	sub.f32 	%f197, %f197, %f180;

BB9_16:
	cvt.rn.f32.s32	%f181, %r25;
	sub.f32 	%f200, %f198, %f181;
	sub.f32 	%f199, %f197, %f181;

BB9_17:
	div.s32 	%r64, %r1, %r26;
	mul.lo.s32 	%r65, %r64, %r26;
	sub.s32 	%r66, %r1, %r65;
	add.f32 	%f182, %f195, %f37;
	setp.gt.f32	%p25, %f182, %f196;
	mul.lo.s32 	%r67, %r64, %r24;
	cvta.to.global.u64 	%rd21, %rd5;
	cvt.s64.s32	%rd22, %r67;
	add.s64 	%rd23, %rd21, %rd22;
	mul.wide.s32 	%rd24, %r66, 8;
	add.s64 	%rd25, %rd23, %rd24;
	selp.f32	%f183, 0f00000000, %f199, %p25;
	selp.f32	%f184, 0f00000000, %f200, %p25;
	st.global.v2.f32 	[%rd25], {%f184, %f183};

BB9_18:
	ret;
}

	// .globl	UpSampleShifts
.visible .entry UpSampleShifts(
	.param .u64 UpSampleShifts_param_0,
	.param .u64 UpSampleShifts_param_1,
	.param .u32 UpSampleShifts_param_2,
	.param .u32 UpSampleShifts_param_3,
	.param .u32 UpSampleShifts_param_4,
	.param .u32 UpSampleShifts_param_5,
	.param .u32 UpSampleShifts_param_6,
	.param .u32 UpSampleShifts_param_7,
	.param .u32 UpSampleShifts_param_8,
	.param .u32 UpSampleShifts_param_9,
	.param .u32 UpSampleShifts_param_10,
	.param .u32 UpSampleShifts_param_11
)
{
	.reg .pred 	%p<4>;
	.reg .f32 	%f<53>;
	.reg .b32 	%r<33>;
	.reg .b64 	%rd<19>;


	ld.param.u64 	%rd1, [UpSampleShifts_param_0];
	ld.param.u64 	%rd2, [UpSampleShifts_param_1];
	ld.param.u32 	%r3, [UpSampleShifts_param_2];
	ld.param.u32 	%r4, [UpSampleShifts_param_3];
	ld.param.u32 	%r5, [UpSampleShifts_param_4];
	ld.param.u32 	%r6, [UpSampleShifts_param_5];
	ld.param.u32 	%r7, [UpSampleShifts_param_6];
	ld.param.u32 	%r8, [UpSampleShifts_param_7];
	ld.param.u32 	%r11, [UpSampleShifts_param_8];
	ld.param.u32 	%r12, [UpSampleShifts_param_9];
	ld.param.u32 	%r9, [UpSampleShifts_param_10];
	ld.param.u32 	%r10, [UpSampleShifts_param_11];
	mov.u32 	%r13, %ctaid.x;
	mov.u32 	%r14, %ntid.x;
	mov.u32 	%r15, %tid.x;
	mad.lo.s32 	%r1, %r14, %r13, %r15;
	mov.u32 	%r16, %ntid.y;
	mov.u32 	%r17, %ctaid.y;
	mov.u32 	%r18, %tid.y;
	mad.lo.s32 	%r2, %r16, %r17, %r18;
	setp.ge.s32	%p1, %r2, %r12;
	setp.ge.s32	%p2, %r1, %r11;
	or.pred  	%p3, %p1, %p2;
	@%p3 bra 	BB10_2;

	cvt.rn.f32.s32	%f1, %r5;
	cvt.rn.f32.s32	%f2, %r9;
	mul.f32 	%f3, %f1, %f2;
	mul.lo.s32 	%r19, %r10, %r6;
	cvt.rn.f32.s32	%f4, %r19;
	div.rn.f32 	%f5, %f3, %f4;
	cvt.rn.f32.s32	%f6, %r1;
	div.rn.f32 	%f7, %f6, %f5;
	cvt.rn.f32.s32	%f8, %r2;
	div.rn.f32 	%f9, %f8, %f5;
	cvt.rmi.f32.f32	%f10, %f7;
	cvt.rzi.s32.f32	%r20, %f10;
	cvt.rpi.f32.f32	%f11, %f7;
	cvt.rzi.s32.f32	%r21, %f11;
	cvt.rmi.f32.f32	%f12, %f9;
	cvt.rzi.s32.f32	%r22, %f12;
	cvt.rpi.f32.f32	%f13, %f9;
	cvt.rzi.s32.f32	%r23, %f13;
	add.s32 	%r24, %r7, -1;
	min.s32 	%r25, %r20, %r24;
	min.s32 	%r26, %r21, %r24;
	add.s32 	%r27, %r8, -1;
	min.s32 	%r28, %r22, %r27;
	min.s32 	%r29, %r23, %r27;
	mul.lo.s32 	%r30, %r28, %r3;
	cvta.to.global.u64 	%rd3, %rd1;
	cvt.s64.s32	%rd4, %r30;
	add.s64 	%rd5, %rd3, %rd4;
	mul.wide.s32 	%rd6, %r25, 8;
	add.s64 	%rd7, %rd5, %rd6;
	ld.global.v2.f32 	{%f14, %f15}, [%rd7];
	mul.wide.s32 	%rd8, %r26, 8;
	add.s64 	%rd9, %rd5, %rd8;
	ld.global.v2.f32 	{%f18, %f19}, [%rd9];
	mul.lo.s32 	%r31, %r29, %r3;
	cvt.s64.s32	%rd10, %r31;
	add.s64 	%rd11, %rd3, %rd10;
	add.s64 	%rd12, %rd11, %rd6;
	ld.global.v2.f32 	{%f22, %f23}, [%rd12];
	add.s64 	%rd13, %rd11, %rd8;
	ld.global.v2.f32 	{%f26, %f27}, [%rd13];
	sub.f32 	%f30, %f18, %f14;
	cvt.rn.f32.s32	%f31, %r26;
	sub.f32 	%f32, %f31, %f7;
	mov.f32 	%f33, 0f3F800000;
	sub.f32 	%f34, %f33, %f32;
	fma.rn.f32 	%f35, %f34, %f30, %f14;
	sub.f32 	%f36, %f26, %f22;
	fma.rn.f32 	%f37, %f34, %f36, %f22;
	sub.f32 	%f38, %f37, %f35;
	cvt.rn.f32.s32	%f39, %r29;
	sub.f32 	%f40, %f39, %f9;
	sub.f32 	%f41, %f33, %f40;
	fma.rn.f32 	%f42, %f41, %f38, %f35;
	sub.f32 	%f43, %f19, %f15;
	fma.rn.f32 	%f44, %f34, %f43, %f15;
	sub.f32 	%f45, %f27, %f23;
	fma.rn.f32 	%f46, %f34, %f45, %f23;
	sub.f32 	%f47, %f46, %f44;
	fma.rn.f32 	%f48, %f41, %f47, %f44;
	cvt.rn.f32.s32	%f49, %r6;
	div.rn.f32 	%f50, %f1, %f49;
	mul.lo.s32 	%r32, %r2, %r4;
	cvta.to.global.u64 	%rd14, %rd2;
	cvt.s64.s32	%rd15, %r32;
	add.s64 	%rd16, %rd14, %rd15;
	mul.wide.s32 	%rd17, %r1, 8;
	add.s64 	%rd18, %rd16, %rd17;
	mul.f32 	%f51, %f50, %f48;
	mul.f32 	%f52, %f50, %f42;
	st.global.v2.f32 	[%rd18], {%f52, %f51};

BB10_2:
	ret;
}

	// .globl	ComputeStructureTensor
.visible .entry ComputeStructureTensor(
	.param .u64 ComputeStructureTensor_param_0,
	.param .u64 ComputeStructureTensor_param_1,
	.param .u64 ComputeStructureTensor_param_2,
	.param .u32 ComputeStructureTensor_param_3,
	.param .u32 ComputeStructureTensor_param_4,
	.param .u32 ComputeStructureTensor_param_5,
	.param .u32 ComputeStructureTensor_param_6
)
{
	.reg .pred 	%p<4>;
	.reg .f32 	%f<6>;
	.reg .b32 	%r<15>;
	.reg .b64 	%rd<17>;


	ld.param.u64 	%rd1, [ComputeStructureTensor_param_0];
	ld.param.u64 	%rd2, [ComputeStructureTensor_param_1];
	ld.param.u64 	%rd3, [ComputeStructureTensor_param_2];
	ld.param.u32 	%r5, [ComputeStructureTensor_param_3];
	ld.param.u32 	%r6, [ComputeStructureTensor_param_4];
	ld.param.u32 	%r3, [ComputeStructureTensor_param_5];
	ld.param.u32 	%r4, [ComputeStructureTensor_param_6];
	mov.u32 	%r7, %ctaid.x;
	mov.u32 	%r8, %ntid.x;
	mov.u32 	%r9, %tid.x;
	mad.lo.s32 	%r1, %r8, %r7, %r9;
	mov.u32 	%r10, %ntid.y;
	mov.u32 	%r11, %ctaid.y;
	mov.u32 	%r12, %tid.y;
	mad.lo.s32 	%r2, %r10, %r11, %r12;
	setp.ge.s32	%p1, %r2, %r6;
	setp.ge.s32	%p2, %r1, %r5;
	or.pred  	%p3, %p1, %p2;
	@%p3 bra 	BB11_2;

	cvta.to.global.u64 	%rd4, %rd1;
	mul.lo.s32 	%r13, %r2, %r3;
	cvt.s64.s32	%rd5, %r13;
	add.s64 	%rd6, %rd4, %rd5;
	mul.wide.s32 	%rd7, %r1, 4;
	add.s64 	%rd8, %rd6, %rd7;
	cvta.to.global.u64 	%rd9, %rd2;
	add.s64 	%rd10, %rd9, %rd5;
	add.s64 	%rd11, %rd10, %rd7;
	ld.global.f32 	%f1, [%rd8];
	mul.f32 	%f2, %f1, %f1;
	ld.global.f32 	%f3, [%rd11];
	mul.f32 	%f4, %f3, %f3;
	mul.f32 	%f5, %f1, %f3;
	mul.lo.s32 	%r14, %r2, %r4;
	cvta.to.global.u64 	%rd12, %rd3;
	cvt.s64.s32	%rd13, %r14;
	add.s64 	%rd14, %rd12, %rd13;
	mul.wide.s32 	%rd15, %r1, 12;
	add.s64 	%rd16, %rd14, %rd15;
	st.global.f32 	[%rd16], %f2;
	st.global.f32 	[%rd16+4], %f4;
	st.global.f32 	[%rd16+8], %f5;

BB11_2:
	ret;
}

	// .globl	ComputeKernelParam
.visible .entry ComputeKernelParam(
	.param .u64 ComputeKernelParam_param_0,
	.param .u32 ComputeKernelParam_param_1,
	.param .u32 ComputeKernelParam_param_2,
	.param .u32 ComputeKernelParam_param_3,
	.param .f32 ComputeKernelParam_param_4,
	.param .f32 ComputeKernelParam_param_5,
	.param .f32 ComputeKernelParam_param_6,
	.param .f32 ComputeKernelParam_param_7,
	.param .f32 ComputeKernelParam_param_8,
	.param .f32 ComputeKernelParam_param_9
)
{
	.reg .pred 	%p<5>;
	.reg .f32 	%f<80>;
	.reg .b32 	%r<13>;
	.reg .b64 	%rd<7>;


	ld.param.u64 	%rd2, [ComputeKernelParam_param_0];
	ld.param.u32 	%r4, [ComputeKernelParam_param_1];
	ld.param.u32 	%r5, [ComputeKernelParam_param_2];
	ld.param.u32 	%r3, [ComputeKernelParam_param_3];
	ld.param.f32 	%f11, [ComputeKernelParam_param_4];
	ld.param.f32 	%f12, [ComputeKernelParam_param_5];
	ld.param.f32 	%f13, [ComputeKernelParam_param_6];
	ld.param.f32 	%f14, [ComputeKernelParam_param_7];
	ld.param.f32 	%f15, [ComputeKernelParam_param_8];
	ld.param.f32 	%f16, [ComputeKernelParam_param_9];
	mov.u32 	%r6, %ctaid.x;
	mov.u32 	%r7, %ntid.x;
	mov.u32 	%r8, %tid.x;
	mad.lo.s32 	%r1, %r7, %r6, %r8;
	mov.u32 	%r9, %ntid.y;
	mov.u32 	%r10, %ctaid.y;
	mov.u32 	%r11, %tid.y;
	mad.lo.s32 	%r2, %r9, %r10, %r11;
	setp.ge.s32	%p1, %r2, %r5;
	setp.ge.s32	%p2, %r1, %r4;
	or.pred  	%p3, %p1, %p2;
	@%p3 bra 	BB12_4;

	cvta.to.global.u64 	%rd3, %rd2;
	mul.lo.s32 	%r12, %r2, %r3;
	cvt.s64.s32	%rd4, %r12;
	add.s64 	%rd5, %rd3, %rd4;
	mul.wide.s32 	%rd6, %r1, 12;
	add.s64 	%rd1, %rd5, %rd6;
	ld.global.f32 	%f2, [%rd1];
	ld.global.f32 	%f1, [%rd1+4];
	ld.global.f32 	%f19, [%rd1+8];
	sub.f32 	%f20, %f1, %f2;
	mul.f32 	%f21, %f19, 0f40800000;
	mul.f32 	%f22, %f19, %f21;
	fma.rn.f32 	%f23, %f20, %f20, %f22;
	sqrt.rn.f32 	%f3, %f23;
	add.f32 	%f4, %f19, %f19;
	add.f32 	%f5, %f3, %f20;
	mul.f32 	%f24, %f5, %f5;
	fma.rn.f32 	%f25, %f4, %f4, %f24;
	sqrt.rn.f32 	%f6, %f25;
	mov.f32 	%f18, 0f00000000;
	mov.f32 	%f17, 0f3F800000;
	setp.leu.f32	%p4, %f6, 0f00000000;
	mov.f32 	%f78, %f17;
	mov.f32 	%f79, %f18;
	@%p4 bra 	BB12_3;

	div.rn.f32 	%f78, %f4, %f6;
	div.rn.f32 	%f79, %f5, %f6;

BB12_3:
	add.f32 	%f26, %f2, %f1;
	add.f32 	%f27, %f3, %f26;
	mul.f32 	%f28, %f27, 0f3F000000;
	sub.f32 	%f29, %f26, %f3;
	mul.f32 	%f30, %f29, 0f3F000000;
	sub.f32 	%f31, %f28, %f30;
	mul.f32 	%f32, %f31, %f31;
	add.f32 	%f33, %f28, %f30;
	mul.f32 	%f34, %f33, %f33;
	div.rn.f32 	%f35, %f32, %f34;
	sqrt.rn.f32 	%f36, %f35;
	add.f32 	%f37, %f36, 0f3F800000;
	sqrt.rn.f32 	%f38, %f28;
	div.rn.f32 	%f39, %f38, %f12;
	sub.f32 	%f41, %f17, %f39;
	add.f32 	%f42, %f41, %f11;
	min.f32 	%f43, %f17, %f42;
	max.f32 	%f45, %f43, %f18;
	mul.f32 	%f46, %f13, %f15;
	mul.f32 	%f47, %f46, %f37;
	div.rn.f32 	%f48, %f13, %f16;
	mul.f32 	%f49, %f37, %f48;
	sub.f32 	%f50, %f17, %f45;
	mul.f32 	%f51, %f45, %f13;
	mul.f32 	%f52, %f51, %f14;
	fma.rn.f32 	%f53, %f47, %f50, %f52;
	mul.f32 	%f54, %f50, %f49;
	fma.rn.f32 	%f55, %f51, %f14, %f54;
	mul.f32 	%f56, %f53, %f53;
	mul.f32 	%f57, %f55, %f55;
	mul.f32 	%f58, %f79, %f56;
	mul.f32 	%f59, %f78, %f78;
	mul.f32 	%f60, %f59, %f57;
	fma.rn.f32 	%f61, %f79, %f58, %f60;
	mul.f32 	%f62, %f58, %f78;
	mul.f32 	%f63, %f78, %f79;
	mul.f32 	%f64, %f63, %f57;
	sub.f32 	%f65, %f64, %f62;
	mul.f32 	%f66, %f56, %f78;
	mul.f32 	%f67, %f66, %f78;
	mul.f32 	%f68, %f79, %f79;
	fma.rn.f32 	%f69, %f68, %f57, %f67;
	mul.f32 	%f70, %f61, %f69;
	mul.f32 	%f71, %f65, %f65;
	sub.f32 	%f72, %f70, %f71;
	add.f32 	%f73, %f72, 0f2EDBE6FF;
	div.rn.f32 	%f74, %f69, %f73;
	div.rn.f32 	%f75, %f61, %f73;
	neg.f32 	%f76, %f65;
	div.rn.f32 	%f77, %f76, %f73;
	st.global.f32 	[%rd1], %f74;
	st.global.f32 	[%rd1+4], %f75;
	st.global.f32 	[%rd1+8], %f77;

BB12_4:
	ret;
}

	// .globl	fourierFilter
.visible .entry fourierFilter(
	.param .u64 fourierFilter_param_0,
	.param .u64 fourierFilter_param_1,
	.param .u32 fourierFilter_param_2,
	.param .u32 fourierFilter_param_3,
	.param .f32 fourierFilter_param_4,
	.param .f32 fourierFilter_param_5,
	.param .f32 fourierFilter_param_6,
	.param .f32 fourierFilter_param_7,
	.param .u32 fourierFilter_param_8
)
{
	.reg .pred 	%p<31>;
	.reg .f32 	%f<106>;
	.reg .b32 	%r<16>;
	.reg .b64 	%rd<9>;


	ld.param.u64 	%rd2, [fourierFilter_param_0];
	ld.param.u64 	%rd3, [fourierFilter_param_1];
	ld.param.u32 	%r4, [fourierFilter_param_3];
	ld.param.f32 	%f17, [fourierFilter_param_4];
	ld.param.f32 	%f18, [fourierFilter_param_5];
	ld.param.f32 	%f19, [fourierFilter_param_6];
	ld.param.f32 	%f20, [fourierFilter_param_7];
	ld.param.u32 	%r5, [fourierFilter_param_8];
	ld.param.u32 	%r3, [fourierFilter_param_2];
	mov.u32 	%r6, %ctaid.x;
	mov.u32 	%r7, %ntid.x;
	mov.u32 	%r8, %tid.x;
	mad.lo.s32 	%r1, %r7, %r6, %r8;
	mov.u32 	%r9, %ntid.y;
	mov.u32 	%r10, %ctaid.y;
	mov.u32 	%r11, %tid.y;
	mad.lo.s32 	%r2, %r9, %r10, %r11;
	shr.u32 	%r12, %r3, 31;
	add.s32 	%r13, %r3, %r12;
	shr.s32 	%r14, %r13, 1;
	add.s32 	%r15, %r14, 1;
	setp.ge.s32	%p3, %r1, %r15;
	setp.ge.s32	%p4, %r2, %r4;
	or.pred  	%p5, %p3, %p4;
	@%p5 bra 	BB13_11;

	cvt.rn.f32.s32	%f21, %r1;
	cvt.rn.f32.s32	%f1, %r4;
	mul.f32 	%f22, %f1, 0f3F000000;
	cvt.rn.f32.s32	%f23, %r2;
	setp.gt.f32	%p6, %f23, %f22;
	sub.f32 	%f24, %f1, %f23;
	neg.f32 	%f25, %f24;
	selp.f32	%f26, %f25, %f23, %p6;
	cvt.rn.f32.s32	%f27, %r3;
	div.rn.f32 	%f28, %f21, %f27;
	div.rn.f32 	%f2, %f26, %f1;
	mul.f32 	%f29, %f2, %f2;
	fma.rn.f32 	%f30, %f28, %f28, %f29;
	sqrt.rn.f32 	%f3, %f30;
	add.f32 	%f4, %f18, %f20;
	sub.f32 	%f5, %f17, %f19;
	setp.gt.f32	%p7, %f5, 0f00000000;
	selp.f32	%f31, %f5, 0f3F800000, %p7;
	setp.gtu.f32	%p8, %f3, %f31;
	selp.f32	%f104, 0f00000000, 0f3F800000, %p8;
	setp.leu.f32	%p9, %f19, 0f00000000;
	@%p9 bra 	BB13_3;

	mov.f32 	%f32, 0f3F800000;
	sub.f32 	%f33, %f32, %f104;
	sub.f32 	%f34, %f3, %f5;
	mul.f32 	%f35, %f34, %f34;
	add.f32 	%f36, %f19, %f19;
	mul.f32 	%f37, %f36, %f19;
	div.rn.f32 	%f38, %f35, %f37;
	neg.f32 	%f39, %f38;
	mul.f32 	%f40, %f38, 0fBFB8AA3B;
	cvt.rzi.f32.f32	%f41, %f40;
	mov.f32 	%f42, 0fBF317200;
	fma.rn.f32 	%f43, %f41, %f42, %f39;
	mov.f32 	%f44, 0fB5BFBE8E;
	fma.rn.f32 	%f45, %f41, %f44, %f43;
	mul.f32 	%f46, %f45, 0f3FB8AA3B;
	ex2.approx.ftz.f32 	%f47, %f46;
	add.f32 	%f48, %f41, 0f00000000;
	ex2.approx.f32 	%f49, %f48;
	mul.f32 	%f50, %f47, %f49;
	setp.gt.f32	%p10, %f38, 0f42D20000;
	selp.f32	%f51, 0f00000000, %f50, %p10;
	setp.lt.f32	%p11, %f38, 0fC2D20000;
	selp.f32	%f52, 0f7F800000, %f51, %p11;
	mul.f32 	%f53, %f33, %f52;
	setp.gt.f32	%p12, %f53, 0f3A83126F;
	selp.f32	%f104, %f53, %f104, %p12;

BB13_3:
	setp.neu.f32	%p13, %f5, 0f00000000;
	or.pred  	%p15, %p9, %p13;
	setp.neu.f32	%p16, %f4, 0f00000000;
	or.pred  	%p17, %p15, %p16;
	setp.neu.f32	%p18, %f20, 0f00000000;
	or.pred  	%p19, %p17, %p18;
	@%p19 bra 	BB13_5;

	sub.f32 	%f54, %f3, %f5;
	mul.f32 	%f55, %f54, %f54;
	add.f32 	%f56, %f19, %f19;
	mul.f32 	%f57, %f56, %f19;
	div.rn.f32 	%f58, %f55, %f57;
	neg.f32 	%f59, %f58;
	mul.f32 	%f60, %f58, 0fBFB8AA3B;
	cvt.rzi.f32.f32	%f61, %f60;
	mov.f32 	%f62, 0fBF317200;
	fma.rn.f32 	%f63, %f61, %f62, %f59;
	mov.f32 	%f64, 0fB5BFBE8E;
	fma.rn.f32 	%f65, %f61, %f64, %f63;
	mul.f32 	%f66, %f65, 0f3FB8AA3B;
	ex2.approx.ftz.f32 	%f67, %f66;
	add.f32 	%f68, %f61, 0f00000000;
	ex2.approx.f32 	%f69, %f68;
	mul.f32 	%f70, %f67, %f69;
	setp.gt.f32	%p20, %f58, 0f42D20000;
	selp.f32	%f71, 0f00000000, %f70, %p20;
	setp.lt.f32	%p21, %f58, 0fC2D20000;
	selp.f32	%f104, 0f7F800000, %f71, %p21;

BB13_5:
	setp.leu.f32	%p22, %f4, 0f00000000;
	@%p22 bra 	BB13_8;

	setp.ltu.f32	%p23, %f3, %f4;
	selp.f32	%f11, 0f00000000, 0f3F800000, %p23;
	mul.f32 	%f104, %f11, %f104;
	setp.leu.f32	%p24, %f20, 0f00000000;
	@%p24 bra 	BB13_8;

	mov.f32 	%f72, 0f3F800000;
	sub.f32 	%f73, %f72, %f11;
	sub.f32 	%f74, %f3, %f4;
	mul.f32 	%f75, %f74, %f74;
	add.f32 	%f76, %f20, %f20;
	mul.f32 	%f77, %f76, %f20;
	div.rn.f32 	%f78, %f75, %f77;
	neg.f32 	%f79, %f78;
	mul.f32 	%f80, %f78, 0fBFB8AA3B;
	cvt.rzi.f32.f32	%f81, %f80;
	mov.f32 	%f82, 0fBF317200;
	fma.rn.f32 	%f83, %f81, %f82, %f79;
	mov.f32 	%f84, 0fB5BFBE8E;
	fma.rn.f32 	%f85, %f81, %f84, %f83;
	mul.f32 	%f86, %f85, 0f3FB8AA3B;
	ex2.approx.ftz.f32 	%f87, %f86;
	add.f32 	%f88, %f81, 0f00000000;
	ex2.approx.f32 	%f89, %f88;
	mul.f32 	%f90, %f87, %f89;
	setp.gt.f32	%p25, %f78, 0f42D20000;
	selp.f32	%f91, 0f00000000, %f90, %p25;
	setp.lt.f32	%p26, %f78, 0fC2D20000;
	selp.f32	%f92, 0f7F800000, %f91, %p26;
	mul.f32 	%f93, %f73, %f92;
	setp.gt.f32	%p27, %f93, 0f3A83126F;
	selp.f32	%f104, %f93, %f104, %p27;

BB13_8:
	cvt.s64.s32	%rd4, %r2;
	mul.lo.s64 	%rd5, %rd4, %rd3;
	cvta.to.global.u64 	%rd6, %rd2;
	add.s64 	%rd7, %rd6, %rd5;
	mul.wide.s32 	%rd8, %r1, 8;
	add.s64 	%rd1, %rd7, %rd8;
	ld.global.v2.f32 	{%f94, %f95}, [%rd1];
	setp.lt.s32	%p29, %r1, %r5;
	mov.pred 	%p30, -1;
	@%p29 bra 	BB13_10;

	abs.f32 	%f96, %f2;
	mul.f32 	%f97, %f1, %f96;
	cvt.rn.f32.s32	%f98, %r5;
	setp.lt.f32	%p30, %f97, %f98;

BB13_10:
	mul.f32 	%f99, %f104, %f94;
	mul.f32 	%f100, %f104, %f95;
	selp.f32	%f101, 0f00000000, %f99, %p30;
	selp.f32	%f102, 0f00000000, %f100, %p30;
	st.global.v2.f32 	[%rd1], {%f101, %f102};

BB13_11:
	ret;
}

	// .globl	fftshift
.visible .entry fftshift(
	.param .u64 fftshift_param_0,
	.param .u32 fftshift_param_1,
	.param .u32 fftshift_param_2
)
{
	.reg .pred 	%p<4>;
	.reg .f32 	%f<10>;
	.reg .b32 	%r<23>;
	.reg .b64 	%rd<5>;


	ld.param.u64 	%rd1, [fftshift_param_0];
	ld.param.u32 	%r3, [fftshift_param_1];
	ld.param.u32 	%r4, [fftshift_param_2];
	mov.u32 	%r5, %ctaid.x;
	mov.u32 	%r6, %ntid.x;
	mov.u32 	%r7, %tid.x;
	mad.lo.s32 	%r1, %r6, %r5, %r7;
	mov.u32 	%r8, %ntid.y;
	mov.u32 	%r9, %ctaid.y;
	mov.u32 	%r10, %tid.y;
	mad.lo.s32 	%r2, %r8, %r9, %r10;
	setp.ge.s32	%p1, %r1, %r3;
	setp.ge.s32	%p2, %r2, %r4;
	or.pred  	%p3, %p1, %p2;
	@%p3 bra 	BB14_2;

	cvta.to.global.u64 	%rd2, %rd1;
	add.s32 	%r11, %r2, %r1;
	shr.u32 	%r12, %r3, 31;
	add.s32 	%r13, %r3, %r12;
	shr.u32 	%r14, %r13, 1;
	sub.s32 	%r15, %r11, %r14;
	shr.u32 	%r16, %r4, 31;
	add.s32 	%r17, %r4, %r16;
	shr.u32 	%r18, %r17, 1;
	sub.s32 	%r19, %r15, %r18;
	and.b32  	%r20, %r19, 1;
	shl.b32 	%r21, %r20, 1;
	cvt.rn.f32.s32	%f1, %r21;
	mov.f32 	%f2, 0f3F800000;
	sub.f32 	%f3, %f2, %f1;
	mad.lo.s32 	%r22, %r2, %r3, %r1;
	mul.wide.s32 	%rd3, %r22, 8;
	add.s64 	%rd4, %rd2, %rd3;
	ld.global.v2.f32 	{%f4, %f5}, [%rd4];
	mul.f32 	%f8, %f5, %f3;
	mul.f32 	%f9, %f4, %f3;
	st.global.v2.f32 	[%rd4], {%f9, %f8};

BB14_2:
	ret;
}


